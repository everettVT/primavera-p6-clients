# coding: utf-8

"""
    P6 EPPM Rest API

    The Primavera P6 Enterprise Project Portfolio Management (P6 EPPM) API is a flexible interface to P6 EPPM functionality based on the Representational State Transfer (REST) architectural style. Clients can use HTTP enabled technologies to interact with the API and access application features. For example, you can write programs in Javascript, Java, and other languages to create users, view a list of users, update a user's status, or update user details.

    The version of the OpenAPI document: 2022.12.12
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import datetime
from pydantic import BaseModel, ConfigDict, Field, StrictBool, StrictFloat, StrictInt, StrictStr
from typing import Any, ClassVar, Dict, List, Optional, Union
from typing import Optional, Set
from typing_extensions import Self

class Activity(BaseModel):
    """
    Activity Entity
    """ # noqa: E501
    accounting_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The difference between the planned value of work scheduled and the actual cost of work performed. Computed as accounting variance = planned value - actual cost . A negative value indicates that actual costs have exceeded the scheduled costs.", alias="AccountingVariance")
    accounting_variance_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The difference between the planned value of work scheduled and the actual work performed. Computed as accounting variance labor units = planned value labor units - actual units. A negative value indicates that actual costs have exceeded the scheduled costs.", alias="AccountingVarianceLaborUnits")
    activity_owner_user_id: Optional[StrictInt] = Field(default=None, description="The unique user ID of the activity owner.", alias="ActivityOwnerUserId")
    actual_duration: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The total working time from the activity actual start date to the actual finish date (for completed activities), or to the current data date (for in-progress activities). The actual working time is computed using the activity's calendar.", alias="ActualDuration")
    actual_expense_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The actual costs for all project expenses associated with the activity.", alias="ActualExpenseCost")
    actual_finish_date: Optional[datetime] = Field(default=None, description="The date on which the activity is actually finished.", alias="ActualFinishDate")
    actual_labor_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The actual costs for all labor resources assigned to the activity. If no resources are assigned, computed as the activity actual labor units * project default price / time.", alias="ActualLaborCost")
    actual_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The actual units for all labor resources assigned to the activity.", alias="ActualLaborUnits")
    actual_material_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The sum of all regular and overtime costs for material resources.", alias="ActualMaterialCost")
    actual_non_labor_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The actual costs for all nonlabor resources assigned to the activity. If no resources are assigned, computed as the activity actual nonlabor units * project default price / time.", alias="ActualNonLaborCost")
    actual_non_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The actual units for all nonlabor resources assigned to the activity.", alias="ActualNonLaborUnits")
    actual_start_date: Optional[datetime] = Field(default=None, description="The date on which the activity is actually started.", alias="ActualStartDate")
    actual_this_period_labor_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The actual this period labor cost for all labor resources assigned to the activity.", alias="ActualThisPeriodLaborCost")
    actual_this_period_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The actual this period labor units (hours) for all labor resources assigned to the activity.", alias="ActualThisPeriodLaborUnits")
    actual_this_period_material_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The sum of all material resource costs for the current period.", alias="ActualThisPeriodMaterialCost")
    actual_this_period_non_labor_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The actual this period nonlabor cost for all nonlabor resources assigned to the activity. If no resources are assigned, computed as the activity actual nonlabor units * project default price / time.", alias="ActualThisPeriodNonLaborCost")
    actual_this_period_non_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The actual this period nonlabor units (hours) for all nonlabor resources assigned to the activity.", alias="ActualThisPeriodNonLaborUnits")
    actual_total_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The actual total cost for the activity, including labor resources, nonlabor resources, and project expenses. Actual total cost = actual labor costs + actual nonlabor costs + actual expense costs.", alias="ActualTotalCost")
    actual_total_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The sum of Actual Labor Units and Actual Nonlabor Units.", alias="ActualTotalUnits")
    at_completion_duration: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The total working time from the activity's current start date to the current finish date. The current start date is the planned start date until the activity is started, then it is the actual start date. The current finish date is the activity planned finish date while the activity is not started, the remaining finish date while the activity is in progress, and the actual finish date once the activity is completed. The total working time is computed using the activity's calendar.", alias="AtCompletionDuration")
    at_completion_expense_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The total working time from the activity's current start date to the current finish date. The current start date is the planned start date until the activity is started, then it is the actual start date. The current finish date is the activity planned finish date while the activity is not started, the remaining finish date while the activity is in progress, and the actual finish date once the activity is completed. The total working time is computed using the activity's calendar.", alias="AtCompletionExpenseCost")
    at_completion_labor_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The sum of the actual plus remaining costs for all labor resources assigned to the activity. Computed as actual labor cost + remaining labor cost. Same as the planned labor costs if the activity is not started and the actual labor costs once the activity is completed.", alias="AtCompletionLaborCost")
    at_completion_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The sum of the actual plus remaining units for all labor resources assigned to the activity. Computed as actual labor units + remaining labor units. Same as the planned labor units if the activity is not started and the actual labor units once the activity is completed.", alias="AtCompletionLaborUnits")
    at_completion_labor_units_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The project baseline planned total labor units minus the estimate at completion labor units.", alias="AtCompletionLaborUnitsVariance")
    at_completion_material_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The project baseline planned total labor units minus the estimate at completion labor units.", alias="AtCompletionMaterialCost")
    at_completion_non_labor_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The sum of the actual plus remaining costs for all nonlabor resources assigned to the activity. Computed as actual nonlabor cost + remaining nonlabor cost. Same as the planned nonlabor costs if the activity is not started and the actual nonlabor costs once the activity is completed.", alias="AtCompletionNonLaborCost")
    at_completion_non_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The sum of the actual plus remaining units for all nonlabor resources assigned to the activity. Computed as actual nonlabor units + remaining nonlabor units. Same as the planned nonlabor units if the activity is not started and the actual nonlabor units once the activity is completed.", alias="AtCompletionNonLaborUnits")
    at_completion_total_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The total cost at completion for the activity, including labor resources, nonlabor resources, and project expenses. At completion total cost = at completion labor cost + at completion nonlabor cost + at completion expense cost.", alias="AtCompletionTotalCost")
    at_completion_total_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The sum of the actual plus remaining units for the resource assignment on the activity.", alias="AtCompletionTotalUnits")
    at_completion_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The difference between the project baseline total cost and the current estimate of total cost. Computed as VAC = BAC - EAC. A negative value indicates an estimated cost overrun. BAC is computed from the current project baseline.", alias="AtCompletionVariance")
    auto_compute_actuals: Optional[StrictBool] = Field(default=None, description="The option that determines whether the activity's actual and remaining units, start date, finish date, and percent complete are computed automatically using the planned dates, planned units and the schedule percent complete. If this option is selected, the actual/remaining units and actual dates are automatically updated when project actuals are applied. Use this option to assume that all work for the activity proceeds according to plan.", alias="AutoComputeActuals")
    baseline1_duration: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The duration for the activity in the primary baseline. The duration is the total working time from the activity current start date to the current finish date. Same as the actual duration plus the remaining duration. The total working time is computed using the activity's calendar.", alias="Baseline1Duration")
    baseline1_finish_date: Optional[datetime] = Field(default=None, description="The current finish date of the activity in the primary baseline. Set to the activity planned finish date while the activity is not started, the remaining finish date while the activity is in progress, and the actual finish date once the activity is completed.", alias="Baseline1FinishDate")
    baseline1_planned_duration: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The planned duration for the activity in the primary baseline. Planned duration is the total working time from the activity current start date to the current finish date. Same as the actual duration plus the remaining duration. The total working time is computed using the activity's calendar. This field is named Baseline 1 Budgeted Duration in Primavera's Engineering & Construction and Maintenance & Turnaround solutions.", alias="Baseline1PlannedDuration")
    baseline1_planned_expense_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The planned costs for all project expenses associated with the activity. This field is named Baseline 1 Budgeted Expense Cost in Primavera's Engineering & Construction and Maintenance & Turnaround solutions.", alias="Baseline1PlannedExpenseCost")
    baseline1_planned_labor_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The cost at completion for all labor resources assigned to the activity in the primary baseline. Computed from the primary baseline at completion labor units. If no resources are assigned, computed as the activity BL labor units * project default price / time. This field is named Baseline 1 Budgeted Labor Cost in Primavera's Engineering & Construction and Maintenance & Turnaround solutions.", alias="Baseline1PlannedLaborCost")
    baseline1_planned_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The planned units for all labor resources assigned to the activity. This field is named Baseline 1 Budgeted Labor Units in Primavera's Engineering & Construction and Maintenance & Turnaround solutions.", alias="Baseline1PlannedLaborUnits")
    baseline1_planned_material_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The Planned Material Cost for a primary baseline activity.", alias="Baseline1PlannedMaterialCost")
    baseline1_planned_non_labor_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The planned costs for all nonlabor resources assigned to the activity. If no resources are assigned, computed as the activity planned nonlabor units * project default price / time. This field is named Baseline 1 Budgeted Non Labor Cost in Primavera's Engineering & Construction and Maintenance & Turnaround solutions.", alias="Baseline1PlannedNonLaborCost")
    baseline1_planned_non_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The planned units for all nonlabor resources assigned to the activity. This field is named Baseline 1 Budgeted Non Labor Units in Primavera's Engineering & Construction and Maintenance & Turnaround solutions.", alias="Baseline1PlannedNonLaborUnits")
    baseline1_planned_total_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The planned total cost for the activity, including labor resources, nonlabor resources, and project expenses. Planned total cost = planned labor cost + planned nonlabor cost + planned expense cost. This field is named Baseline 1 Budgeted Total Cost in Primavera's Engineering & Construction and Maintenance & Turnaround solutions.", alias="Baseline1PlannedTotalCost")
    baseline1_start_date: Optional[datetime] = Field(default=None, description="The current start date of the activity in the primary baseline. Set to the planned start date until the activity is started, then set to the actual start date.", alias="Baseline1StartDate")
    baseline_duration: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The duration for the activity in the project baseline. The duration is the total working time from the activity current start date to the current finish date. Same as the actual duration plus the remaining duration. The total working time is computed using the activity's calendar.", alias="BaselineDuration")
    baseline_finish_date: Optional[datetime] = Field(default=None, description="The current finish date of the activity in the project baseline. Set to the activity planned finish date while the activity is not started, the remaining finish date while the activity is in progress, and the actual finish date once the activity is completed.", alias="BaselineFinishDate")
    baseline_planned_duration: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The planned duration for the activity in the project baseline. Planned duration is the total working time from the activity current start date to the current finish date. Same as the actual duration plus the remaining duration. The total working time is computed using the activity's calendar. This field is named Baseline Budgeted Duration in Primavera's Engineering & Construction and Maintenance & Turnaround solutions.", alias="BaselinePlannedDuration")
    baseline_planned_expense_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The planned costs for all project expenses associated with the activity. This field is named Baseline Budgeted Expense Cost in Primavera's Engineering & Construction and Maintenance & Turnaround solutions.", alias="BaselinePlannedExpenseCost")
    baseline_planned_labor_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The cost at completion for all labor resources assigned to the activity in the project baseline. Computed from the baseline at completion labor units. If no resources are assigned, computed as the activity BL labor units * project default price / time. This field is named Baseline Budgeted Labor Cost in Primavera's Engineering & Construction and Maintenance & Turnaround solutions.", alias="BaselinePlannedLaborCost")
    baseline_planned_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The planned units for all labor resources assigned to the activity. This field is named Baseline Budgeted Labor Units in Primavera's Engineering & Construction and Maintenance & Turnaround solutions.", alias="BaselinePlannedLaborUnits")
    baseline_planned_material_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The Planned Material Cost for a project baseline activity.", alias="BaselinePlannedMaterialCost")
    baseline_planned_non_labor_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The planned costs for all nonlabor resources assigned to the activity. If no resources are assigned, computed as the activity planned nonlabor units * project default price / time. This field is named Baseline Budgeted Non Labor Cost in Primavera's Engineering & Construction and Maintenance & Turnaround solutions.", alias="BaselinePlannedNonLaborCost")
    baseline_planned_non_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The planned units for all nonlabor resources assigned to the activity. This field is named Baseline Budgeted Non Labor Units in Primavera's Engineering & Construction and Maintenance & Turnaround solutions.", alias="BaselinePlannedNonLaborUnits")
    baseline_planned_total_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The planned total cost for the activity, including labor resources, nonlabor resources, and project expenses. Planned total cost = planned labor cost + planned nonlabor cost + planned expense cost. This field is named Baseline Budgeted Total Cost in Primavera's Engineering & Construction and Maintenance & Turnaround solutions.", alias="BaselinePlannedTotalCost")
    baseline_start_date: Optional[datetime] = Field(default=None, description="The current start date of the activity in the project baseline. Set to the planned start date until the activity is started, then set to the actual start date.", alias="BaselineStartDate")
    budget_at_completion: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The planned total cost through activity completion. Computed as planned labor cost + planned nonlabor cost + planned expense cost, same as the planned total cost.", alias="BudgetAtCompletion")
    cbs_code: Optional[StrictStr] = Field(default=None, description="The unique name of the Unifier CBS Code. Assign CBS codes to activities so that you can filter which activities you will send to Unifier.", alias="CBSCode")
    cbsid: Optional[StrictInt] = Field(default=None, description="The unique Id of CBS Code.", alias="CBSId")
    cbs_object_id: Optional[StrictInt] = Field(default=None, description="The identifier of the CoUnifier CBS.", alias="CBSObjectId")
    calendar_name: Optional[StrictStr] = Field(default=None, description="The name of the calendar.", alias="CalendarName")
    calendar_object_id: Optional[StrictInt] = Field(default=None, description="The unique ID of the calendar assigned to the activity. Activity calendars can be assigned from the global calendar pool or the project calendar pool.", alias="CalendarObjectId")
    cost_percent_complete: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The percent complete of costs for all labor resources, nonlabor resources, and expenses for the activity. Computed as actual total cost / at completion total cost * 100. Always in the range 0 to 100.", alias="CostPercentComplete")
    cost_percent_of_planned: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The percent complete of planned costs for all labor resources, nonlabor resources, and expenses for the activity. Computed as actual total cost / BL planned total cost * 100. The value can exceed 100.", alias="CostPercentOfPlanned")
    cost_performance_index: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The earned value divided by the actual cost. A value less than 1 indicates that actual cost have exceeded the planned value.", alias="CostPerformanceIndex")
    cost_performance_index_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The ratio of the earned value labor units and the actual work performed. Computed as CPI labor units = earned value labor units / actual labor units .", alias="CostPerformanceIndexLaborUnits")
    cost_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The difference between the earned value and the actual cost of work performed. Computed as CV = earned value - actual costs. A negative value indicates that actual costs have exceeded the value of work performed.", alias="CostVariance")
    cost_variance_index: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The ratio of the cost variance and the earned value of work performed. Computed as CVI = cost variance / earned value.", alias="CostVarianceIndex")
    cost_variance_index_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The ratio of the cost variance labor units and the earned value of work performed. Computed as CVI labor units = CV labor units / earned value labor units", alias="CostVarianceIndexLaborUnits")
    cost_variance_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The difference between the earned value of labor units and the actual cost of labor units. Calculated as CV labor units = earned value planned units - actual units. A negative value indicates that actual costs have exceeded the value of work performed.", alias="CostVarianceLaborUnits")
    create_date: Optional[datetime] = Field(default=None, description="The date this activity was created.", alias="CreateDate")
    create_user: Optional[StrictStr] = Field(default=None, description="The name of the user that created this activity.", alias="CreateUser")
    data_date: Optional[datetime] = Field(default=None, description="The current data date for the project. The project status is up to date as of the data date. The data date is modified when project actuals are applied.", alias="DataDate")
    duration1_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The duration between the activity's primary baseline duration and the at complete duration. Computed as primary baseline duration - at completion duration.", alias="Duration1Variance")
    duration_percent_complete: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The percent complete of the activity duration. Computed as (planned duration - remaining duration) / planned duration * 100. Always in the range 0 to 100. The planned duration is taken from the current plan, not from the baseline.", alias="DurationPercentComplete")
    duration_percent_of_planned: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The activity actual duration percent of planned. Computed as actual duration / BL duration * 100. The value can exceed 100. The BL duration is the activity's at completion duration from the project baseline.", alias="DurationPercentOfPlanned")
    duration_type: Optional[StrictStr] = Field(default=None, description="The duration type of the activity. One of 'Fixed Units/Time', 'Fixed Duration and Units/Time', 'Fixed Units', or 'Fixed Duration and Units'. For 'Fixed Units/Time' activities, the resource units per time are constant when the activity duration or units are changed. This type is used when an activity has fixed resources with fixed productivity output per time period. For 'Fixed Duration and Units/Time' activities, the activity duration is constant as the units or resource units per time are changed. This type is used when the activity is to be completed within a fixed time period regardless of the resources assigned. For 'Fixed Units' activities, the activity units are constant when the duration or resource units per time are changed. This type is used when the total amount of work is fixed, and increasing the resources can decrease the activity duration.", alias="DurationType")
    duration_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The duration between the activity's project baseline duration and the at complete duration. Computed as project baseline duration - at completion duration.", alias="DurationVariance")
    early_finish_date: Optional[datetime] = Field(default=None, description="The earliest possible date the activity can finish. This date is computed by the project scheduler based on network logic, schedule constraints, and resource availability.", alias="EarlyFinishDate")
    early_start_date: Optional[datetime] = Field(default=None, description="The earliest possible date the remaining work for the activity can begin. This date is computed by the project scheduler based on network logic, schedule constraints, and resource availability.", alias="EarlyStartDate")
    earned_value_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The portion of the project baseline total cost of the activity that is actually completed as of the project data date. Computed as earned value = BAC * performance % complete. The method for computing performance % complete depends on the earned-value technique selected for the activity's WBS. BAC is computed from the project baseline.", alias="EarnedValueCost")
    earned_value_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The portion of the project baseline labor units that is actually completed as of the project data date. Computed as labor units earned value = project baseline labor units * performance % complete. The method for computing performance % complete depends on the earned-value technique selected for the activity's WBS. The BL labor units is taken from the project baseline.", alias="EarnedValueLaborUnits")
    estimate_at_completion_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The estimated cost at completion for the activity. Computed as the actual total cost plus the estimate-to-complete cost; EAC = ACWP + ETC. Note that the method for computing ETC depends on the earned-value technique selected for the activity's WBS.", alias="EstimateAtCompletionCost")
    estimate_at_completion_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The estimated labor units at completion of the activity. Calculated as actual labor units + estimate to complete labor units. estimate to complete labor units is calculated based off of the earned value setting on the WBS.", alias="EstimateAtCompletionLaborUnits")
    estimate_to_complete: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The estimated cost to complete the activity. Computed as either the remaining total cost for the activity (remaining total cost), or as PF * (BAC - earned value), depending on the earned-value technique selected for the activity's WBS. BAC is computed from the project baseline.", alias="EstimateToComplete")
    estimate_to_complete_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The estimated quantity to complete the activity. Computed as either the remaining total units for the activity (remaining total units), or as PF * (BL labor units - earned value), depending on the earned-value technique selected for the activity's WBS.", alias="EstimateToCompleteLaborUnits")
    estimated_weight: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="EstimatedWeight")
    expected_finish_date: Optional[datetime] = Field(default=None, description="The date the activity is expected to be finished according to the progress made on the activity's work products. The expected finish date is entered manually by people familiar with progress of the activity's work products.", alias="ExpectedFinishDate")
    expense_cost1_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The difference between primary baseline expense cost and at completion expense cost. Calculated as primary baseline expense cost - at completion expense cost (at completion expense cost = actual expense cost + remaining expense cost).", alias="ExpenseCost1Variance")
    expense_cost_percent_complete: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The percent complete of costs for all expenses associated with the activity. Computed as actual expense cost / at completion expense cost * 100. Always in the range 0 to 100.", alias="ExpenseCostPercentComplete")
    expense_cost_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The difference between project baseline expense cost and at completion expense cost. Calculated as project baseline expense cost - at completion expense cost (at completion expense cost = actual expense cost + remaining expense cost).", alias="ExpenseCostVariance")
    external_early_start_date: Optional[datetime] = Field(default=None, description="The date value that determines the early start date for imported activities with external constraints lost (relations from/to external projects that do not exist in the database). This field is the relationship early finish date (REF) when the lost relationship type is FS or SS. When the relationship type is SF or FF, this field is calculated as REF - RD of the successor.", alias="ExternalEarlyStartDate")
    external_late_finish_date: Optional[datetime] = Field(default=None, description="The date value that determines the Late Finish Date for imported activities with external constraints lost (from/to external projects that do not exist in the database). This field is the relationship late finish date (RLF) when the lost relationship type is FS or FF. When the relationship type is SS or SF, this field is calculated as RLS + RD of the predecessor.", alias="ExternalLateFinishDate")
    feedback: Optional[StrictStr] = Field(default=None, description="The feedback from the resource.", alias="Feedback")
    financial_period_tmpl_id: Optional[StrictInt] = Field(default=None, alias="FinancialPeriodTmplId")
    finish_date: Optional[datetime] = Field(default=None, description="The current finish date of the activity. Set to the activity planned finish date while the activity is not started, the remaining finish date while the activity is in progress, and the actual finish date once the activity is completed.", alias="FinishDate")
    finish_date1_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The duration between the finish date in the current project and the primary baseline finish date. Calculated as finish date - primary baseline finish date.", alias="FinishDate1Variance")
    finish_date_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The duration between the finish date in the current project and the project baseline finish date. Calculated as finish date - project baseline finish date.", alias="FinishDateVariance")
    float_path: Optional[StrictInt] = Field(default=None, description="The integer representing the critical path this activity is on. The value 1 is the most critical path, value 2 is the second most critical path, etc.", alias="FloatPath")
    float_path_order: Optional[StrictInt] = Field(default=None, description="The integer representing the order in which this object was found on one of the critical paths.", alias="FloatPathOrder")
    free_float: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The amount of time the activity can be delayed before delaying the start date of any successor activity.", alias="FreeFloat")
    guid: Optional[StrictStr] = Field(default=None, description="The globally unique ID generated by the system.", alias="GUID")
    has_future_bucket_data: Optional[StrictBool] = Field(default=None, description="The flag that indicates whether a resource assignment on the activity has future bucket data.", alias="HasFutureBucketData")
    id: Optional[StrictStr] = Field(default=None, description="The short ID that uniquely identifies the activity within the project.", alias="Id")
    is_baseline: Optional[StrictBool] = Field(default=None, description="The boolean value indicating if this business object is related to a Project or Baseline", alias="IsBaseline")
    is_critical: Optional[StrictBool] = Field(default=None, description="The flag that indicates whether the activity is critical. An activity is critical when its total Float is below the critical duration specified for the project. Delaying critical activities will delay the finish date of the project.", alias="IsCritical")
    is_longest_path: Optional[StrictBool] = Field(default=None, description="The flag that indicates whether an activity is on the longest path. Default = 'N'", alias="IsLongestPath")
    is_new_feedback: Optional[StrictBool] = Field(default=None, description="The flag that indicates that a resource has sent feedback notes about this activity which have not been reviewed yet.", alias="IsNewFeedback")
    is_starred: Optional[StrictBool] = Field(default=None, description="The boolean value indicating if this business object has been assigned a star in P6 Team Member", alias="IsStarred")
    is_template: Optional[StrictBool] = Field(default=None, description="The boolean value indicating if this business object is related to a template Project.", alias="IsTemplate")
    is_work_package: Optional[StrictBool] = Field(default=None, description="Indicates if this WBS is a workpackage in Prime or not.", alias="IsWorkPackage")
    labor_cost1_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The difference between primary baseline labor cost and at completion labor cost. Calculated as BL labor cost - at completion labor cost", alias="LaborCost1Variance")
    labor_cost_percent_complete: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The percent complete of costs for all labor resources assigned to the activity. Computed as actual labor cost / at completion labor cost * 100. Always in the range 0 to 100.", alias="LaborCostPercentComplete")
    labor_cost_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The difference between project baseline labor cost and at completion labor cost. Calculated as BL labor cost - at completion labor cost", alias="LaborCostVariance")
    labor_units1_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The difference between primary baseline labor units and at completion labor units. Calculated as BL labor units - at completion labor units.", alias="LaborUnits1Variance")
    labor_units_percent_complete: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The percent complete of units for all labor resources for the activity. Computed as actual labor units / at completion labor units * 100. Always in the range 0 to 100.", alias="LaborUnitsPercentComplete")
    labor_units_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The difference between project baseline labor units and at completion labor units. Calculated as BL labor units - at completion labor units.", alias="LaborUnitsVariance")
    last_update_date: Optional[datetime] = Field(default=None, description="The date this activity was last updated.", alias="LastUpdateDate")
    last_update_user: Optional[StrictStr] = Field(default=None, description="The name of the user that last updated this activity.", alias="LastUpdateUser")
    late_finish_date: Optional[datetime] = Field(default=None, description="The latest possible date the activity must finish without delaying the project finish date. This date is computed by the project scheduler based on network logic, schedule constraints, and resource availability.", alias="LateFinishDate")
    late_start_date: Optional[datetime] = Field(default=None, description="The latest possible date the remaining work for the activity must begin without delaying the project finish date. This date is computed by the project scheduler based on network logic, schedule constraints, and resource availability.", alias="LateStartDate")
    leveling_priority: Optional[StrictStr] = Field(default=None, description="The activity priority used to prioritize activities in a project when performing resource leveling. Valid values are 'Top', 'High', 'Normal', 'Low', and 'Lowest'.", alias="LevelingPriority")
    location_name: Optional[StrictStr] = Field(default=None, description="The name of the location assigned to the activity.", alias="LocationName")
    location_object_id: Optional[StrictInt] = Field(default=None, description="The unique ID of the location assigned to the activity.", alias="LocationObjectId")
    material_cost1_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The primary Baseline Planned Material Cost minus the At Completion Material Cost.", alias="MaterialCost1Variance")
    material_cost_percent_complete: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The percent complete of costs for all material resources assigned to the activity. Computed as actual nonlabor cost / at completion nonlabor cost * 100. Always in the range 0 to 100.", alias="MaterialCostPercentComplete")
    material_cost_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The project BaselinePlannedMaterialCost minus the AtCompletionMaterialCost.", alias="MaterialCostVariance")
    maximum_duration: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The maximum duration of the activity.", alias="MaximumDuration")
    minimum_duration: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The minimum duration of the activity.", alias="MinimumDuration")
    most_likely_duration: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The most likely duration of the activity.", alias="MostLikelyDuration")
    name: Optional[StrictStr] = Field(default=None, description="The name of the activity. The activity name does not have to be unique.", alias="Name")
    non_labor_cost1_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The difference between the primary baseline nonlabor cost and at completion nonlabor cost. Calculated as BL nonlabor cost - at completion nonlabor cost.", alias="NonLaborCost1Variance")
    non_labor_cost_percent_complete: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The percent complete of costs for all nonlabor resources assigned to the activity. Computed as actual nonlabor cost / at completion nonlabor cost * 100. Always in the range 0 to 100.", alias="NonLaborCostPercentComplete")
    non_labor_cost_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The difference between the project baseline labor cost and at completion labor cost. Calculated as BL nonlabor cost - at completion nonlabor cost.", alias="NonLaborCostVariance")
    non_labor_units1_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The difference between the primary baseline nonlabor units and at completion nonlabor units. Calculated as BL nonlabor units - at completion nonlabor units.", alias="NonLaborUnits1Variance")
    non_labor_units_percent_complete: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The percent complete of units for all nonlabor resources for the activity. Computed as actual nonlabor units / at completion nonlabor units * 100. Always in the range 0 to 100.", alias="NonLaborUnitsPercentComplete")
    non_labor_units_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The difference between the project baseline labor units and at completion labor units. Calculated as BL nonlabor units - at completion nonlabor units.", alias="NonLaborUnitsVariance")
    notes_to_resources: Optional[StrictStr] = Field(default=None, description="The notes from the project manager to the timesheet resources.", alias="NotesToResources")
    object_id: Optional[StrictInt] = Field(default=None, description="The unique ID generated by the system.", alias="ObjectId")
    owner_id_array: Optional[StrictStr] = Field(default=None, description="A comma separated list of activity owner IDs.", alias="OwnerIDArray")
    owner_names_array: Optional[StrictStr] = Field(default=None, description="A comma separated list of activity owner names.", alias="OwnerNamesArray")
    percent_complete: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The activity percent complete. This value is tied to the activity duration % complete, units % complete, or physical % complete, depending on the setting for the activity's percent complete type, which is one of Duration, Units, or Physical. Always in the range 0 to 100.", alias="PercentComplete")
    percent_complete_type: Optional[StrictStr] = Field(default=None, description="The activity percent complete type: 'Physical', 'Duration', or 'Units'.", alias="PercentCompleteType")
    performance_percent_complete: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The activity performance percent complete. The performance percent complete is used to compute earned value and may be based on the activity % complete, on the 0/100 rule, on the 50/50 rule, etc., depending on the technique for computing earned-value percent complete for the activity's WBS. The performance % complete specifies what percentage of the activity's planned worth has been earned so far.", alias="PerformancePercentComplete")
    performance_percent_complete_by_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="PerformancePercentCompleteByLaborUnits")
    physical_percent_complete: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The physical percent complete, which can either be user entered or calculated from the activity's weighted steps.", alias="PhysicalPercentComplete")
    planned_duration: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The total working time from the activity planned start date to the planned finish date. The planned working time is computed using the activity's calendar. This field is named OriginalDuration in Primavera's Engineering & Construction and Maintenance & Turnaround solutions.", alias="PlannedDuration")
    planned_expense_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The planned costs for all project expenses associated with the activity. This field is named BudgetedExpenseCost in Primavera's Engineering & Construction and Maintenance & Turnaround solutions.", alias="PlannedExpenseCost")
    planned_finish_date: Optional[datetime] = Field(default=None, description="The date the activity is scheduled to finish. This date is computed by the project scheduler but can be updated manually by the project manager. This date is not changed by the project scheduler after the activity has been started.", alias="PlannedFinishDate")
    planned_labor_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The planned costs for all labor resources assigned to the activity. If no resources are assigned, computed as the activity planned labor units * project default price / time. This field is named BudgetedLaborCost in Primavera's Engineering & Construction and Maintenance & Turnaround solutions.", alias="PlannedLaborCost")
    planned_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The planned units for all labor resources assigned to the activity. This field is named BudgetedLaborUnits in Primavera's Engineering & Construction and Maintenance & Turnaround solutions.", alias="PlannedLaborUnits")
    planned_material_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The sum of all material resource costs.", alias="PlannedMaterialCost")
    planned_non_labor_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The planned costs for all nonlabor resources assigned to the activity. If no resources are assigned, computed as the activity planned nonlabor units * project default price / time. This field is named BudgetedNonLaborCost in Primavera's Engineering & Construction and Maintenance & Turnaround solutions.", alias="PlannedNonLaborCost")
    planned_non_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The planned units for all nonlabor resources assigned to the activity. This field is named BudgetedNonLaborUnits in Primavera's Engineering & Construction and Maintenance & Turnaround solutions.", alias="PlannedNonLaborUnits")
    planned_start_date: Optional[datetime] = Field(default=None, description="The date the activity is scheduled to begin. This date is computed by the project scheduler but can be updated manually by the project manager. This date is not changed by the project scheduler after the activity has been started.", alias="PlannedStartDate")
    planned_total_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The planned total cost for the activity, including labor resources, nonlabor resources, and project expenses. Planned total cost = planned labor cost + planned nonlabor cost + planned material cost + planned expense cost. This field is named BudgetedTotalCost in Primavera's Engineering & Construction and Maintenance & Turnaround solutions.", alias="PlannedTotalCost")
    planned_total_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The sum of Planned Labor Units and Planned Nonlabor Units. This field is named BudgetedTotalUnits in Primavera's Engineering & Construction and Maintenance & Turnaround solutions.", alias="PlannedTotalUnits")
    planned_value_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The portion of the project baseline total cost of the activity that is scheduled to be completed as of the project data date. Computed as BAC * schedule % complete. Also known as the work scheduled to be performed for the activity. The schedule % complete specifies how much of the activity's project baseline duration has been completed so far. BAC is computed from the project baseline.", alias="PlannedValueCost")
    planned_value_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The portion of the project baseline labor units that is scheduled to be completed as of the project data date. Computed as BL labor units * schedule % complete. The schedule % complete specifies how much of the activity's project baseline duration has been completed so far. BL labor units is taken from the project baseline.", alias="PlannedValueLaborUnits")
    post_resp_criticality_index: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="PostRespCriticalityIndex")
    post_response_pessimistic_finish: Optional[datetime] = Field(default=None, description="The Post Response Pessimistic Finish date calculated by Oracle Prime during quantitative risk analysis.", alias="PostResponsePessimisticFinish")
    post_response_pessimistic_start: Optional[datetime] = Field(default=None, description="The Post Response Pessimistic Start date calculated by Oracle Prime during quantitative risk analysis.", alias="PostResponsePessimisticStart")
    pre_resp_criticality_index: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="PreRespCriticalityIndex")
    pre_response_pessimistic_finish: Optional[datetime] = Field(default=None, description="The Pre Response Pessimistic Finish date calculated by Oracle Prime during quantitative risk analysis.", alias="PreResponsePessimisticFinish")
    pre_response_pessimistic_start: Optional[datetime] = Field(default=None, description="The Pre Response Pessimistic Start date calculated by Oracle Prime during quantitative risk analysis.", alias="PreResponsePessimisticStart")
    primary_constraint_date: Optional[datetime] = Field(default=None, description="The constraint date for the activity, if the activity has a constraint. The activity's constraint type determines whether this is a start date or finish date. Activity constraints are used by the project scheduler.", alias="PrimaryConstraintDate")
    primary_constraint_type: Optional[StrictStr] = Field(default=None, description="The type of constraint applied to the activity start or finish date. Activity constraints are used by the project scheduler. Start date constraints are 'Start On', 'Start On or Before', and 'Start On or After'. Finish date constraints are 'Finish On', 'Finish On or Before', and 'Finish On or After'. Another type of constraint, 'As Late As Possible', schedules the activity as late as possible based on the available free float.", alias="PrimaryConstraintType")
    primary_resource_id: Optional[StrictStr] = Field(default=None, description="The name of the resource.", alias="PrimaryResourceId")
    primary_resource_name: Optional[StrictStr] = Field(default=None, description="The name of the resource.", alias="PrimaryResourceName")
    primary_resource_object_id: Optional[StrictInt] = Field(default=None, description="The unique ID of the primary resource for the activity. The primary resource is responsible for the overall work on the activity and updates the activity status using Timesheets.", alias="PrimaryResourceObjectId")
    project_flag: Optional[StrictStr] = Field(default=None, description="Indicates if this WBS node is a Project/EPS node.", alias="ProjectFlag")
    project_id: Optional[StrictStr] = Field(default=None, description="The short code of the associated project.", alias="ProjectId")
    project_name: Optional[StrictStr] = Field(default=None, description="The name of the associated project.", alias="ProjectName")
    project_object_id: StrictInt = Field(description="The unique ID of the associated project.", alias="ProjectObjectId")
    project_project_flag: Optional[StrictStr] = Field(default=None, description="Indicates if this Project/EPS nose is a Project or EPS.", alias="ProjectProjectFlag")
    remaining_duration: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The remaining duration of the activity. Remaining duration is the total working time from the activity remaining start date to the remaining finish date. The remaining working time is computed using the activity's calendar. Before the activity is started, the remaining duration is the same as the planned duration. After the activity is completed the remaining duration is zero.", alias="RemainingDuration")
    remaining_early_finish_date: Optional[datetime] = Field(default=None, description="The remaining late end date, which is calculated by the scheduler.", alias="RemainingEarlyFinishDate")
    remaining_early_start_date: Optional[datetime] = Field(default=None, description="The date the remaining work for the activity is scheduled to begin. This date is computed by the project scheduler but can be updated manually by the project manager. Before the activity is started, the remaining start date is the same as the planned start date. This is the start date that Timesheets users follow.", alias="RemainingEarlyStartDate")
    remaining_expense_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The remaining costs for all project expenses associated with the activity.", alias="RemainingExpenseCost")
    remaining_float: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The amount of time remaining by which the activity can be delayed before delaying the project finish date. Computed as late finish - remaining finish. If the remaining finish is the same as the early finish (in general, when the activity is not started), then the remaining float is the same as the total float.", alias="RemainingFloat")
    remaining_labor_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The remaining costs for all labor resources assigned to the activity. If no resources are assigned, computed as the activity remaining labor units * project default price / time.", alias="RemainingLaborCost")
    remaining_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The remaining units for all labor resources assigned to the activity. The remaining units reflects the work remaining to be done for the activity. Before the activity is started, the remaining units are the same as the planned units. After the activity is completed, the remaining units are zero.", alias="RemainingLaborUnits")
    remaining_late_finish_date: Optional[datetime] = Field(default=None, description="The remaining late finish date calculated by the scheduler.", alias="RemainingLateFinishDate")
    remaining_late_start_date: Optional[datetime] = Field(default=None, description="The remaining late start date calculated by the scheduler.", alias="RemainingLateStartDate")
    remaining_material_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The sum of all material resource remaining costs.", alias="RemainingMaterialCost")
    remaining_non_labor_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The remaining costs for all nonlabor resources assigned to the activity. If no resources are assigned, computed as the activity remaining nonlabor units * project default price / time.", alias="RemainingNonLaborCost")
    remaining_non_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The remaining units for all nonlabor resources assigned to the activity. The remaining units reflects the work remaining to be done for the activity. Before the activity is started, the remaining units are the same as the planned units. After the activity is completed, the remaining units are zero.", alias="RemainingNonLaborUnits")
    remaining_total_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The remaining total cost for the activity, including labor resources, nonlabor resources, and project expenses. Remaining total cost = remaining labor costs + remaining nonlabor costs + remaining expense costs.", alias="RemainingTotalCost")
    remaining_total_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The sum of Remaining Labor Units and Remaining Nonlabor Units.", alias="RemainingTotalUnits")
    resume_date: Optional[datetime] = Field(default=None, description="The date when a suspended task or resource dependent activity should be resumed. The resume date must be later than the suspend date and earlier than the actual finish date. The Suspend/Resume period behaves like a nonworktime on the activity calendar or resource calendar for task and resource dependent activities.", alias="ResumeDate")
    review_finish_date: Optional[datetime] = Field(default=None, description="The finish date of the activity as proposed by the primary resource using Timesheets, while the activity is in \"For Review\" state. If the project manager approves the activity completion, the review finish is copied to the actual finish.", alias="ReviewFinishDate")
    review_required: Optional[StrictBool] = Field(default=None, description="The indicator that determines whether the activity status updates made in Team Member interfaces must be approved before committing changes.", alias="ReviewRequired")
    review_status: Optional[StrictStr] = Field(default=None, description="The activity review status. Valid values are 'OK', 'For Review', and 'Rejected'. Primary resources set the status to 'For Review' when they believe the activity is completed but are not allowed to mark activities as completed.", alias="ReviewStatus")
    schedule_percent_complete: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The activity schedule percent complete, which specifies how much of the activity's project baseline duration has been completed so far. Computed based on where the current data date falls relative to the activity's project baseline start and finish dates. If the data date is earlier than the BL start, the schedule % complete is 0. If the data date is later than the BL finish, the schedule % complete is 100. The schedule % complete indicates how much of the activity duration should be currently completed, relative to the selected project baseline.", alias="SchedulePercentComplete")
    schedule_performance_index: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The ratio of the earned value of work performed and the work scheduled to be performed. Computed as SPI = earned value/ planned value. A value less than 1 indicates that less work was actually performed than was scheduled.", alias="SchedulePerformanceIndex")
    schedule_performance_index_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The ratio of the earned value of labor units and the planned value of labor units. Computed as SPI labor units = earned value labor units / planned value labor units.", alias="SchedulePerformanceIndexLaborUnits")
    schedule_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The difference between the earned value of work performed and the work scheduled to be performed. Computed as SV = earned value - planned value. A negative value indicates that less work was actually performed than was scheduled.", alias="ScheduleVariance")
    schedule_variance_index: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The ratio of the schedule variance and the work scheduled to be performed. Computed as SVI = SV / planned value.", alias="ScheduleVarianceIndex")
    schedule_variance_index_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The ratio of the schedule variance and the work scheduled to be performed. Computed as SVI labor units = SV labor units / planned value labor units.", alias="ScheduleVarianceIndexLaborUnits")
    schedule_variance_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The difference between the earned value of work performed and the work scheduled to be performed. Computed as SV labor units = earned value labor units - planned value labor units.", alias="ScheduleVarianceLaborUnits")
    scope_percent_complete: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="ScopePercentComplete")
    secondary_constraint_date: Optional[datetime] = Field(default=None, description="The date to be used for the cstr_type2 assignment, if the activity has a cstr_type2 value. The activity's constraint type determines whether this is a start date or finish date. Activity constraints are used by the project scheduler.", alias="SecondaryConstraintDate")
    secondary_constraint_type: Optional[StrictStr] = Field(default=None, description="The additional constraint to be used by the scheduler. If more than one constraint is assigned, this value should be restricted to one of the following: \"Start On or Before\", \"Start On or After\", \"Finish On or Before\", or \"Finish On or After\".", alias="SecondaryConstraintType")
    start_date: Optional[datetime] = Field(default=None, description="The start date of the activity. Set to the remaining start date until the activity is started, then set to the actual start date.", alias="StartDate")
    start_date1_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The duration between the start date in the current project and the primary baseline start date. Calculated as start date - primary baseline start date.", alias="StartDate1Variance")
    start_date_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The duration between the start date in the current project and the project baseline start date. Calculated as start date - project baseline start date.", alias="StartDateVariance")
    status: Optional[StrictStr] = Field(default=None, description="The current status of the activity, either 'Not Started', 'In Progress', or 'Completed'.", alias="Status")
    status_code: Optional[StrictStr] = Field(default=None, description="The project status, either 'Planned', 'Active', 'Inactive', 'What-If', 'Requested', or 'Template'.", alias="StatusCode")
    suspend_date: Optional[datetime] = Field(default=None, description="The start date when the progress of a task or resource dependent activity is delayed from. The suspend date must be later than the actual start date, which the activity must have. The progress of the activity can be resumed by setting the resume date. The Suspend/Resume period behaves like a nonworktime on the activity calendar or resource calendar for task and resource dependent activities.", alias="SuspendDate")
    task_status_completion: Optional[StrictStr] = Field(default=None, alias="TaskStatusCompletion")
    task_status_dates: Optional[StrictStr] = Field(default=None, alias="TaskStatusDates")
    task_status_indicator: Optional[StrictBool] = Field(default=None, alias="TaskStatusIndicator")
    to_complete_performance_index: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The TCPI, which is calculated as (budget at completion - earned value) / (estimate at completion - ACWP).", alias="ToCompletePerformanceIndex")
    total_cost1_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The difference between the primary baseline total cost and the at completion total cost. Calculated as BL total cost - at completion total cost.", alias="TotalCost1Variance")
    total_cost_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The difference between the project baseline total cost and the at completion total cost. Calculated as BL total cost - at completion total cost.", alias="TotalCostVariance")
    total_float: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The amount of time the activity can be delayed before delaying the project finish date. Total float can be computed as late start - early start or as late finish - early finish; this option can be set when running the project scheduler.", alias="TotalFloat")
    type: Optional[StrictStr] = Field(default=None, description="The type of activity, either 'Task Dependent', 'Resource Dependent', 'Level of Effort', 'Start Milestone', 'Finish Milestone', or 'WBS Summary'. A 'Task Dependent' activity is scheduled using the activity's calendar rather than the calendars of the assigned resources. A 'Resource Dependent' activity is scheduled using the calendars of the assigned resources. This type is used when several resources are assigned to the activity, but they may work separately. A 'Start Milestone' or 'Finish Milestone' is a zero-duration activity without resources, marking a significant project event. A 'Level of Effort' activity has a duration that is determined by its dependent activities. Administration-type activities are typically 'Level of Effort'. A 'WBS Summary' comprises a group of activities that share a common WBS level. For example, all activities whose WBS codes start with A (A.1, A.1.1, A.1.1.2, A.2, A.3 and so forth) can be part of one WBS activity whose WBS code is A.", alias="Type")
    units_percent_complete: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The percent complete of units for all labor and nonlabor resources assigned to the activity. Computed as actual units / at completion units * 100. Always in the range 0 to 100.", alias="UnitsPercentComplete")
    unread_comment_count: Optional[StrictInt] = Field(default=None, description="The number of Team Member Discussion comments associated with the Activity which have not yet been read.", alias="UnreadCommentCount")
    wbs_code: Optional[StrictStr] = Field(default=None, description="The short code assigned to each WBS element for identification. Each WBS element is uniquely identified by concatenating its own code together with its parents' codes.", alias="WBSCode")
    wbs_name: Optional[StrictStr] = Field(default=None, description="The name of the WBS element.", alias="WBSName")
    wbs_name_path: Optional[StrictStr] = Field(default=None, alias="WBSNamePath")
    wbs_object_id: StrictInt = Field(description="The unique ID of the WBS for the activity.", alias="WBSObjectId")
    wbs_path: Optional[StrictStr] = Field(default=None, description="The WBS hierarchy of the activity.", alias="WBSPath")
    work_package_id: Optional[StrictStr] = Field(default=None, alias="WorkPackageId")
    work_package_name: Optional[StrictStr] = Field(default=None, alias="WorkPackageName")
    __properties: ClassVar[List[str]] = ["AccountingVariance", "AccountingVarianceLaborUnits", "ActivityOwnerUserId", "ActualDuration", "ActualExpenseCost", "ActualFinishDate", "ActualLaborCost", "ActualLaborUnits", "ActualMaterialCost", "ActualNonLaborCost", "ActualNonLaborUnits", "ActualStartDate", "ActualThisPeriodLaborCost", "ActualThisPeriodLaborUnits", "ActualThisPeriodMaterialCost", "ActualThisPeriodNonLaborCost", "ActualThisPeriodNonLaborUnits", "ActualTotalCost", "ActualTotalUnits", "AtCompletionDuration", "AtCompletionExpenseCost", "AtCompletionLaborCost", "AtCompletionLaborUnits", "AtCompletionLaborUnitsVariance", "AtCompletionMaterialCost", "AtCompletionNonLaborCost", "AtCompletionNonLaborUnits", "AtCompletionTotalCost", "AtCompletionTotalUnits", "AtCompletionVariance", "AutoComputeActuals", "Baseline1Duration", "Baseline1FinishDate", "Baseline1PlannedDuration", "Baseline1PlannedExpenseCost", "Baseline1PlannedLaborCost", "Baseline1PlannedLaborUnits", "Baseline1PlannedMaterialCost", "Baseline1PlannedNonLaborCost", "Baseline1PlannedNonLaborUnits", "Baseline1PlannedTotalCost", "Baseline1StartDate", "BaselineDuration", "BaselineFinishDate", "BaselinePlannedDuration", "BaselinePlannedExpenseCost", "BaselinePlannedLaborCost", "BaselinePlannedLaborUnits", "BaselinePlannedMaterialCost", "BaselinePlannedNonLaborCost", "BaselinePlannedNonLaborUnits", "BaselinePlannedTotalCost", "BaselineStartDate", "BudgetAtCompletion", "CBSCode", "CBSId", "CBSObjectId", "CalendarName", "CalendarObjectId", "CostPercentComplete", "CostPercentOfPlanned", "CostPerformanceIndex", "CostPerformanceIndexLaborUnits", "CostVariance", "CostVarianceIndex", "CostVarianceIndexLaborUnits", "CostVarianceLaborUnits", "CreateDate", "CreateUser", "DataDate", "Duration1Variance", "DurationPercentComplete", "DurationPercentOfPlanned", "DurationType", "DurationVariance", "EarlyFinishDate", "EarlyStartDate", "EarnedValueCost", "EarnedValueLaborUnits", "EstimateAtCompletionCost", "EstimateAtCompletionLaborUnits", "EstimateToComplete", "EstimateToCompleteLaborUnits", "EstimatedWeight", "ExpectedFinishDate", "ExpenseCost1Variance", "ExpenseCostPercentComplete", "ExpenseCostVariance", "ExternalEarlyStartDate", "ExternalLateFinishDate", "Feedback", "FinancialPeriodTmplId", "FinishDate", "FinishDate1Variance", "FinishDateVariance", "FloatPath", "FloatPathOrder", "FreeFloat", "GUID", "HasFutureBucketData", "Id", "IsBaseline", "IsCritical", "IsLongestPath", "IsNewFeedback", "IsStarred", "IsTemplate", "IsWorkPackage", "LaborCost1Variance", "LaborCostPercentComplete", "LaborCostVariance", "LaborUnits1Variance", "LaborUnitsPercentComplete", "LaborUnitsVariance", "LastUpdateDate", "LastUpdateUser", "LateFinishDate", "LateStartDate", "LevelingPriority", "LocationName", "LocationObjectId", "MaterialCost1Variance", "MaterialCostPercentComplete", "MaterialCostVariance", "MaximumDuration", "MinimumDuration", "MostLikelyDuration", "Name", "NonLaborCost1Variance", "NonLaborCostPercentComplete", "NonLaborCostVariance", "NonLaborUnits1Variance", "NonLaborUnitsPercentComplete", "NonLaborUnitsVariance", "NotesToResources", "ObjectId", "OwnerIDArray", "OwnerNamesArray", "PercentComplete", "PercentCompleteType", "PerformancePercentComplete", "PerformancePercentCompleteByLaborUnits", "PhysicalPercentComplete", "PlannedDuration", "PlannedExpenseCost", "PlannedFinishDate", "PlannedLaborCost", "PlannedLaborUnits", "PlannedMaterialCost", "PlannedNonLaborCost", "PlannedNonLaborUnits", "PlannedStartDate", "PlannedTotalCost", "PlannedTotalUnits", "PlannedValueCost", "PlannedValueLaborUnits", "PostRespCriticalityIndex", "PostResponsePessimisticFinish", "PostResponsePessimisticStart", "PreRespCriticalityIndex", "PreResponsePessimisticFinish", "PreResponsePessimisticStart", "PrimaryConstraintDate", "PrimaryConstraintType", "PrimaryResourceId", "PrimaryResourceName", "PrimaryResourceObjectId", "ProjectFlag", "ProjectId", "ProjectName", "ProjectObjectId", "ProjectProjectFlag", "RemainingDuration", "RemainingEarlyFinishDate", "RemainingEarlyStartDate", "RemainingExpenseCost", "RemainingFloat", "RemainingLaborCost", "RemainingLaborUnits", "RemainingLateFinishDate", "RemainingLateStartDate", "RemainingMaterialCost", "RemainingNonLaborCost", "RemainingNonLaborUnits", "RemainingTotalCost", "RemainingTotalUnits", "ResumeDate", "ReviewFinishDate", "ReviewRequired", "ReviewStatus", "SchedulePercentComplete", "SchedulePerformanceIndex", "SchedulePerformanceIndexLaborUnits", "ScheduleVariance", "ScheduleVarianceIndex", "ScheduleVarianceIndexLaborUnits", "ScheduleVarianceLaborUnits", "ScopePercentComplete", "SecondaryConstraintDate", "SecondaryConstraintType", "StartDate", "StartDate1Variance", "StartDateVariance", "Status", "StatusCode", "SuspendDate", "TaskStatusCompletion", "TaskStatusDates", "TaskStatusIndicator", "ToCompletePerformanceIndex", "TotalCost1Variance", "TotalCostVariance", "TotalFloat", "Type", "UnitsPercentComplete", "UnreadCommentCount", "WBSCode", "WBSName", "WBSNamePath", "WBSObjectId", "WBSPath", "WorkPackageId", "WorkPackageName"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of Activity from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of Activity from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "AccountingVariance": obj.get("AccountingVariance"),
            "AccountingVarianceLaborUnits": obj.get("AccountingVarianceLaborUnits"),
            "ActivityOwnerUserId": obj.get("ActivityOwnerUserId"),
            "ActualDuration": obj.get("ActualDuration"),
            "ActualExpenseCost": obj.get("ActualExpenseCost"),
            "ActualFinishDate": obj.get("ActualFinishDate"),
            "ActualLaborCost": obj.get("ActualLaborCost"),
            "ActualLaborUnits": obj.get("ActualLaborUnits"),
            "ActualMaterialCost": obj.get("ActualMaterialCost"),
            "ActualNonLaborCost": obj.get("ActualNonLaborCost"),
            "ActualNonLaborUnits": obj.get("ActualNonLaborUnits"),
            "ActualStartDate": obj.get("ActualStartDate"),
            "ActualThisPeriodLaborCost": obj.get("ActualThisPeriodLaborCost"),
            "ActualThisPeriodLaborUnits": obj.get("ActualThisPeriodLaborUnits"),
            "ActualThisPeriodMaterialCost": obj.get("ActualThisPeriodMaterialCost"),
            "ActualThisPeriodNonLaborCost": obj.get("ActualThisPeriodNonLaborCost"),
            "ActualThisPeriodNonLaborUnits": obj.get("ActualThisPeriodNonLaborUnits"),
            "ActualTotalCost": obj.get("ActualTotalCost"),
            "ActualTotalUnits": obj.get("ActualTotalUnits"),
            "AtCompletionDuration": obj.get("AtCompletionDuration"),
            "AtCompletionExpenseCost": obj.get("AtCompletionExpenseCost"),
            "AtCompletionLaborCost": obj.get("AtCompletionLaborCost"),
            "AtCompletionLaborUnits": obj.get("AtCompletionLaborUnits"),
            "AtCompletionLaborUnitsVariance": obj.get("AtCompletionLaborUnitsVariance"),
            "AtCompletionMaterialCost": obj.get("AtCompletionMaterialCost"),
            "AtCompletionNonLaborCost": obj.get("AtCompletionNonLaborCost"),
            "AtCompletionNonLaborUnits": obj.get("AtCompletionNonLaborUnits"),
            "AtCompletionTotalCost": obj.get("AtCompletionTotalCost"),
            "AtCompletionTotalUnits": obj.get("AtCompletionTotalUnits"),
            "AtCompletionVariance": obj.get("AtCompletionVariance"),
            "AutoComputeActuals": obj.get("AutoComputeActuals"),
            "Baseline1Duration": obj.get("Baseline1Duration"),
            "Baseline1FinishDate": obj.get("Baseline1FinishDate"),
            "Baseline1PlannedDuration": obj.get("Baseline1PlannedDuration"),
            "Baseline1PlannedExpenseCost": obj.get("Baseline1PlannedExpenseCost"),
            "Baseline1PlannedLaborCost": obj.get("Baseline1PlannedLaborCost"),
            "Baseline1PlannedLaborUnits": obj.get("Baseline1PlannedLaborUnits"),
            "Baseline1PlannedMaterialCost": obj.get("Baseline1PlannedMaterialCost"),
            "Baseline1PlannedNonLaborCost": obj.get("Baseline1PlannedNonLaborCost"),
            "Baseline1PlannedNonLaborUnits": obj.get("Baseline1PlannedNonLaborUnits"),
            "Baseline1PlannedTotalCost": obj.get("Baseline1PlannedTotalCost"),
            "Baseline1StartDate": obj.get("Baseline1StartDate"),
            "BaselineDuration": obj.get("BaselineDuration"),
            "BaselineFinishDate": obj.get("BaselineFinishDate"),
            "BaselinePlannedDuration": obj.get("BaselinePlannedDuration"),
            "BaselinePlannedExpenseCost": obj.get("BaselinePlannedExpenseCost"),
            "BaselinePlannedLaborCost": obj.get("BaselinePlannedLaborCost"),
            "BaselinePlannedLaborUnits": obj.get("BaselinePlannedLaborUnits"),
            "BaselinePlannedMaterialCost": obj.get("BaselinePlannedMaterialCost"),
            "BaselinePlannedNonLaborCost": obj.get("BaselinePlannedNonLaborCost"),
            "BaselinePlannedNonLaborUnits": obj.get("BaselinePlannedNonLaborUnits"),
            "BaselinePlannedTotalCost": obj.get("BaselinePlannedTotalCost"),
            "BaselineStartDate": obj.get("BaselineStartDate"),
            "BudgetAtCompletion": obj.get("BudgetAtCompletion"),
            "CBSCode": obj.get("CBSCode"),
            "CBSId": obj.get("CBSId"),
            "CBSObjectId": obj.get("CBSObjectId"),
            "CalendarName": obj.get("CalendarName"),
            "CalendarObjectId": obj.get("CalendarObjectId"),
            "CostPercentComplete": obj.get("CostPercentComplete"),
            "CostPercentOfPlanned": obj.get("CostPercentOfPlanned"),
            "CostPerformanceIndex": obj.get("CostPerformanceIndex"),
            "CostPerformanceIndexLaborUnits": obj.get("CostPerformanceIndexLaborUnits"),
            "CostVariance": obj.get("CostVariance"),
            "CostVarianceIndex": obj.get("CostVarianceIndex"),
            "CostVarianceIndexLaborUnits": obj.get("CostVarianceIndexLaborUnits"),
            "CostVarianceLaborUnits": obj.get("CostVarianceLaborUnits"),
            "CreateDate": obj.get("CreateDate"),
            "CreateUser": obj.get("CreateUser"),
            "DataDate": obj.get("DataDate"),
            "Duration1Variance": obj.get("Duration1Variance"),
            "DurationPercentComplete": obj.get("DurationPercentComplete"),
            "DurationPercentOfPlanned": obj.get("DurationPercentOfPlanned"),
            "DurationType": obj.get("DurationType"),
            "DurationVariance": obj.get("DurationVariance"),
            "EarlyFinishDate": obj.get("EarlyFinishDate"),
            "EarlyStartDate": obj.get("EarlyStartDate"),
            "EarnedValueCost": obj.get("EarnedValueCost"),
            "EarnedValueLaborUnits": obj.get("EarnedValueLaborUnits"),
            "EstimateAtCompletionCost": obj.get("EstimateAtCompletionCost"),
            "EstimateAtCompletionLaborUnits": obj.get("EstimateAtCompletionLaborUnits"),
            "EstimateToComplete": obj.get("EstimateToComplete"),
            "EstimateToCompleteLaborUnits": obj.get("EstimateToCompleteLaborUnits"),
            "EstimatedWeight": obj.get("EstimatedWeight"),
            "ExpectedFinishDate": obj.get("ExpectedFinishDate"),
            "ExpenseCost1Variance": obj.get("ExpenseCost1Variance"),
            "ExpenseCostPercentComplete": obj.get("ExpenseCostPercentComplete"),
            "ExpenseCostVariance": obj.get("ExpenseCostVariance"),
            "ExternalEarlyStartDate": obj.get("ExternalEarlyStartDate"),
            "ExternalLateFinishDate": obj.get("ExternalLateFinishDate"),
            "Feedback": obj.get("Feedback"),
            "FinancialPeriodTmplId": obj.get("FinancialPeriodTmplId"),
            "FinishDate": obj.get("FinishDate"),
            "FinishDate1Variance": obj.get("FinishDate1Variance"),
            "FinishDateVariance": obj.get("FinishDateVariance"),
            "FloatPath": obj.get("FloatPath"),
            "FloatPathOrder": obj.get("FloatPathOrder"),
            "FreeFloat": obj.get("FreeFloat"),
            "GUID": obj.get("GUID"),
            "HasFutureBucketData": obj.get("HasFutureBucketData"),
            "Id": obj.get("Id"),
            "IsBaseline": obj.get("IsBaseline"),
            "IsCritical": obj.get("IsCritical"),
            "IsLongestPath": obj.get("IsLongestPath"),
            "IsNewFeedback": obj.get("IsNewFeedback"),
            "IsStarred": obj.get("IsStarred"),
            "IsTemplate": obj.get("IsTemplate"),
            "IsWorkPackage": obj.get("IsWorkPackage"),
            "LaborCost1Variance": obj.get("LaborCost1Variance"),
            "LaborCostPercentComplete": obj.get("LaborCostPercentComplete"),
            "LaborCostVariance": obj.get("LaborCostVariance"),
            "LaborUnits1Variance": obj.get("LaborUnits1Variance"),
            "LaborUnitsPercentComplete": obj.get("LaborUnitsPercentComplete"),
            "LaborUnitsVariance": obj.get("LaborUnitsVariance"),
            "LastUpdateDate": obj.get("LastUpdateDate"),
            "LastUpdateUser": obj.get("LastUpdateUser"),
            "LateFinishDate": obj.get("LateFinishDate"),
            "LateStartDate": obj.get("LateStartDate"),
            "LevelingPriority": obj.get("LevelingPriority"),
            "LocationName": obj.get("LocationName"),
            "LocationObjectId": obj.get("LocationObjectId"),
            "MaterialCost1Variance": obj.get("MaterialCost1Variance"),
            "MaterialCostPercentComplete": obj.get("MaterialCostPercentComplete"),
            "MaterialCostVariance": obj.get("MaterialCostVariance"),
            "MaximumDuration": obj.get("MaximumDuration"),
            "MinimumDuration": obj.get("MinimumDuration"),
            "MostLikelyDuration": obj.get("MostLikelyDuration"),
            "Name": obj.get("Name"),
            "NonLaborCost1Variance": obj.get("NonLaborCost1Variance"),
            "NonLaborCostPercentComplete": obj.get("NonLaborCostPercentComplete"),
            "NonLaborCostVariance": obj.get("NonLaborCostVariance"),
            "NonLaborUnits1Variance": obj.get("NonLaborUnits1Variance"),
            "NonLaborUnitsPercentComplete": obj.get("NonLaborUnitsPercentComplete"),
            "NonLaborUnitsVariance": obj.get("NonLaborUnitsVariance"),
            "NotesToResources": obj.get("NotesToResources"),
            "ObjectId": obj.get("ObjectId"),
            "OwnerIDArray": obj.get("OwnerIDArray"),
            "OwnerNamesArray": obj.get("OwnerNamesArray"),
            "PercentComplete": obj.get("PercentComplete"),
            "PercentCompleteType": obj.get("PercentCompleteType"),
            "PerformancePercentComplete": obj.get("PerformancePercentComplete"),
            "PerformancePercentCompleteByLaborUnits": obj.get("PerformancePercentCompleteByLaborUnits"),
            "PhysicalPercentComplete": obj.get("PhysicalPercentComplete"),
            "PlannedDuration": obj.get("PlannedDuration"),
            "PlannedExpenseCost": obj.get("PlannedExpenseCost"),
            "PlannedFinishDate": obj.get("PlannedFinishDate"),
            "PlannedLaborCost": obj.get("PlannedLaborCost"),
            "PlannedLaborUnits": obj.get("PlannedLaborUnits"),
            "PlannedMaterialCost": obj.get("PlannedMaterialCost"),
            "PlannedNonLaborCost": obj.get("PlannedNonLaborCost"),
            "PlannedNonLaborUnits": obj.get("PlannedNonLaborUnits"),
            "PlannedStartDate": obj.get("PlannedStartDate"),
            "PlannedTotalCost": obj.get("PlannedTotalCost"),
            "PlannedTotalUnits": obj.get("PlannedTotalUnits"),
            "PlannedValueCost": obj.get("PlannedValueCost"),
            "PlannedValueLaborUnits": obj.get("PlannedValueLaborUnits"),
            "PostRespCriticalityIndex": obj.get("PostRespCriticalityIndex"),
            "PostResponsePessimisticFinish": obj.get("PostResponsePessimisticFinish"),
            "PostResponsePessimisticStart": obj.get("PostResponsePessimisticStart"),
            "PreRespCriticalityIndex": obj.get("PreRespCriticalityIndex"),
            "PreResponsePessimisticFinish": obj.get("PreResponsePessimisticFinish"),
            "PreResponsePessimisticStart": obj.get("PreResponsePessimisticStart"),
            "PrimaryConstraintDate": obj.get("PrimaryConstraintDate"),
            "PrimaryConstraintType": obj.get("PrimaryConstraintType"),
            "PrimaryResourceId": obj.get("PrimaryResourceId"),
            "PrimaryResourceName": obj.get("PrimaryResourceName"),
            "PrimaryResourceObjectId": obj.get("PrimaryResourceObjectId"),
            "ProjectFlag": obj.get("ProjectFlag"),
            "ProjectId": obj.get("ProjectId"),
            "ProjectName": obj.get("ProjectName"),
            "ProjectObjectId": obj.get("ProjectObjectId"),
            "ProjectProjectFlag": obj.get("ProjectProjectFlag"),
            "RemainingDuration": obj.get("RemainingDuration"),
            "RemainingEarlyFinishDate": obj.get("RemainingEarlyFinishDate"),
            "RemainingEarlyStartDate": obj.get("RemainingEarlyStartDate"),
            "RemainingExpenseCost": obj.get("RemainingExpenseCost"),
            "RemainingFloat": obj.get("RemainingFloat"),
            "RemainingLaborCost": obj.get("RemainingLaborCost"),
            "RemainingLaborUnits": obj.get("RemainingLaborUnits"),
            "RemainingLateFinishDate": obj.get("RemainingLateFinishDate"),
            "RemainingLateStartDate": obj.get("RemainingLateStartDate"),
            "RemainingMaterialCost": obj.get("RemainingMaterialCost"),
            "RemainingNonLaborCost": obj.get("RemainingNonLaborCost"),
            "RemainingNonLaborUnits": obj.get("RemainingNonLaborUnits"),
            "RemainingTotalCost": obj.get("RemainingTotalCost"),
            "RemainingTotalUnits": obj.get("RemainingTotalUnits"),
            "ResumeDate": obj.get("ResumeDate"),
            "ReviewFinishDate": obj.get("ReviewFinishDate"),
            "ReviewRequired": obj.get("ReviewRequired"),
            "ReviewStatus": obj.get("ReviewStatus"),
            "SchedulePercentComplete": obj.get("SchedulePercentComplete"),
            "SchedulePerformanceIndex": obj.get("SchedulePerformanceIndex"),
            "SchedulePerformanceIndexLaborUnits": obj.get("SchedulePerformanceIndexLaborUnits"),
            "ScheduleVariance": obj.get("ScheduleVariance"),
            "ScheduleVarianceIndex": obj.get("ScheduleVarianceIndex"),
            "ScheduleVarianceIndexLaborUnits": obj.get("ScheduleVarianceIndexLaborUnits"),
            "ScheduleVarianceLaborUnits": obj.get("ScheduleVarianceLaborUnits"),
            "ScopePercentComplete": obj.get("ScopePercentComplete"),
            "SecondaryConstraintDate": obj.get("SecondaryConstraintDate"),
            "SecondaryConstraintType": obj.get("SecondaryConstraintType"),
            "StartDate": obj.get("StartDate"),
            "StartDate1Variance": obj.get("StartDate1Variance"),
            "StartDateVariance": obj.get("StartDateVariance"),
            "Status": obj.get("Status"),
            "StatusCode": obj.get("StatusCode"),
            "SuspendDate": obj.get("SuspendDate"),
            "TaskStatusCompletion": obj.get("TaskStatusCompletion"),
            "TaskStatusDates": obj.get("TaskStatusDates"),
            "TaskStatusIndicator": obj.get("TaskStatusIndicator"),
            "ToCompletePerformanceIndex": obj.get("ToCompletePerformanceIndex"),
            "TotalCost1Variance": obj.get("TotalCost1Variance"),
            "TotalCostVariance": obj.get("TotalCostVariance"),
            "TotalFloat": obj.get("TotalFloat"),
            "Type": obj.get("Type"),
            "UnitsPercentComplete": obj.get("UnitsPercentComplete"),
            "UnreadCommentCount": obj.get("UnreadCommentCount"),
            "WBSCode": obj.get("WBSCode"),
            "WBSName": obj.get("WBSName"),
            "WBSNamePath": obj.get("WBSNamePath"),
            "WBSObjectId": obj.get("WBSObjectId"),
            "WBSPath": obj.get("WBSPath"),
            "WorkPackageId": obj.get("WorkPackageId"),
            "WorkPackageName": obj.get("WorkPackageName")
        })
        return _obj


