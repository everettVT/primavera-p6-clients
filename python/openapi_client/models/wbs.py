# coding: utf-8

"""
    P6 EPPM Rest API

    The Primavera P6 Enterprise Project Portfolio Management (P6 EPPM) API is a flexible interface to P6 EPPM functionality based on the Representational State Transfer (REST) architectural style. Clients can use HTTP enabled technologies to interact with the API and access application features. For example, you can write programs in Javascript, Java, and other languages to create users, view a list of users, update a user's status, or update user details.

    The version of the OpenAPI document: 2022.12.12
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import datetime
from pydantic import BaseModel, ConfigDict, Field, StrictBool, StrictFloat, StrictInt, StrictStr
from typing import Any, ClassVar, Dict, List, Optional, Union
from typing import Optional, Set
from typing_extensions import Self

class WBS(BaseModel):
    """
    WBS Entity
    """ # noqa: E501
    anticipated_finish_date: Optional[datetime] = Field(default=None, description="The anticipated finish date of WBS, project and EPS elements. User-entered - not dependent upon any other fields. If there are no children, the anticipated finish date will be the finish date displayed in the columns.", alias="AnticipatedFinishDate")
    anticipated_start_date: Optional[datetime] = Field(default=None, description="The anticipated start date of WBS, project and EPS elements. User-entered - not dependent upon any other fields. If there are no children, the anticipated start date will be the start date displayed in the columns.", alias="AnticipatedStartDate")
    code: StrictStr = Field(description="The short code assigned to each WBS element for identification. Each WBS element is uniquely identified by concatenating its own code together with its parents' codes.", alias="Code")
    contains_summary_data: Optional[StrictBool] = Field(default=None, description="The flag that indicates that the WBS has been summarized.", alias="ContainsSummaryData")
    create_date: Optional[datetime] = Field(default=None, description="The date this wbs was created.", alias="CreateDate")
    create_user: Optional[StrictStr] = Field(default=None, description="The name of the user that created this wbs.", alias="CreateUser")
    current_budget: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The current budget for this WBS.", alias="CurrentBudget")
    current_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The current budget minus the total spending plan.", alias="CurrentVariance")
    distributed_current_budget: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The sum of the current budget values from one level lower", alias="DistributedCurrentBudget")
    earned_value_compute_type: Optional[StrictStr] = Field(default=None, description="The technique used for computing earned-value percent complete for activities within the WBS. Valid values are 'Activity Percent Complete', '0 / 100', '50 / 50', 'Custom Percent Complete', 'WBS Milestones Percent Complete', and 'Activity Percent Complete Using Resource Curves'.", alias="EarnedValueComputeType")
    earned_value_etc_compute_type: Optional[StrictStr] = Field(default=None, description="The technique for computing earned-value estimate-to-complete for activities within the WBS. Valid values are 'ETC = Remaining Cost for Activity', 'Performance Factor = 1', 'Performance Factor = Custom Value', 'Performance Factor = 1 / Cost Performance Index', and 'Performance Factor = 1 / (Cost Performance Index * Schedule Performance Index)'.", alias="EarnedValueETCComputeType")
    earned_value_etc_user_value: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The user-defined performance factor, PF, for computing earned-value estimate-to-complete. ETC is computed as PF * ( BAC - BCWP).", alias="EarnedValueETCUserValue")
    earned_value_user_percent: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The user-defined percent complete for computing earned value for activities within the WBS. A value of, say, 25 means that 25% of the planned amount is earned when the activity is started and the remainder is earned when the activity is completed.", alias="EarnedValueUserPercent")
    estimated_weight: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="EstimatedWeight")
    finish_date: Optional[datetime] = Field(default=None, description="The finish date of the WBS.", alias="FinishDate")
    forecast_finish_date: Optional[datetime] = Field(default=None, description="The alternate end date to be optionally used by the scheduler. The user sets the alternate end date by dragging the project bar in the Gantt Chart while manually leveling the resource profile in a resource analysis layout.", alias="ForecastFinishDate")
    forecast_start_date: Optional[datetime] = Field(default=None, description="The alternate start date to be optionally used by the scheduler. The user sets the alternate start date by dragging the project bar in the Gantt Chart while manually leveling the resource profile in a resource analysis layout.", alias="ForecastStartDate")
    guid: Optional[StrictStr] = Field(default=None, description="The globally unique ID generated by the system.", alias="GUID")
    independent_etc_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The user-entered ETC total labor.", alias="IndependentETCLaborUnits")
    independent_etc_total_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The user-entered ETC total cost.", alias="IndependentETCTotalCost")
    integrated_type: Optional[StrictStr] = Field(default=None, description="The flag indicating whether the WBS is integrated with an Enterprise Resource Planning (ERP) system. 'Fusion' indicates the WBS is integrated with Oracle Fusion. 'ERP' indicates the WBS is integrated with another ERP system. 'Gateway' indicates the WBS is integrated with Oracle Primavera Gateway.", alias="IntegratedType")
    integrated_wbs: Optional[StrictBool] = Field(default=None, description="The indicator that determines whether a WBS is synchronized or not.", alias="IntegratedWBS")
    is_baseline: Optional[StrictBool] = Field(default=None, description="The boolean value indicating if this business object is related to a Project or Baseline", alias="IsBaseline")
    is_template: Optional[StrictBool] = Field(default=None, description="The boolean value indicating if this business object is related to a template Project.", alias="IsTemplate")
    is_work_package: Optional[StrictBool] = Field(default=None, description="Indicates if this WBS is a workpackage in Oracle Prime or not.", alias="IsWorkPackage")
    last_update_date: Optional[datetime] = Field(default=None, description="The date this wbs was last updated.", alias="LastUpdateDate")
    last_update_user: Optional[StrictStr] = Field(default=None, description="The name of the user that last updated this wbs.", alias="LastUpdateUser")
    name: StrictStr = Field(description="The name of the WBS element.", alias="Name")
    obs_name: Optional[StrictStr] = Field(default=None, description="The name of the person/role in the organization, sometimes referred to as the \"responsible manager\".", alias="OBSName")
    obs_object_id: Optional[StrictInt] = Field(default=None, description="The unique ID of the project manager from the project's OBS tree who is responsible for the WBS.", alias="OBSObjectId")
    object_id: Optional[StrictInt] = Field(default=None, description="The unique ID generated by the system.", alias="ObjectId")
    original_budget: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The original budget for the WBS element.", alias="OriginalBudget")
    parent_object_id: StrictInt = Field(description="The unique ID of the parent WBS of this WBS in the hierarchy.", alias="ParentObjectId")
    project_id: Optional[StrictStr] = Field(default=None, description="The short code that uniquely identifies the project.", alias="ProjectId")
    project_object_id: StrictInt = Field(description="The unique ID of the associated project.", alias="ProjectObjectId")
    proposed_budget: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The sum of the original budget plus the approved and pending budgets from the budget change log.", alias="ProposedBudget")
    rolled_up_finish_date: Optional[datetime] = Field(default=None, description="The finish date of the WBS. The involved summarized fields such as \"RemianingFinish\" and \"ActualFinish\" are rolled up on the fly.", alias="RolledUpFinishDate")
    rolled_up_start_date: Optional[datetime] = Field(default=None, description="The start date of the WBS. The involved summarized fields such as \"RemianingStart\" and \"ActualStart\" are rolled up on the fly.", alias="RolledUpStartDate")
    sequence_number: Optional[StrictInt] = Field(default=None, description="The sequence number for sorting.", alias="SequenceNumber")
    start_date: Optional[datetime] = Field(default=None, description="The start date of the WBS.", alias="StartDate")
    status: Optional[StrictStr] = Field(default=None, description="The WBS status: 'Planned', 'Active', 'Inactive', 'What-If', 'Requested', or 'Template'.", alias="Status")
    status_reviewer_name: Optional[StrictStr] = Field(default=None, description="The name of the user reviewing status updates.", alias="StatusReviewerName")
    status_reviewer_object_id: Optional[StrictStr] = Field(default=None, description="The unique ID of the user reviewing status updates.", alias="StatusReviewerObjectId")
    summary_accounting_variance_by_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The Planned Value minus the Actual Cost. A negative value indicates that the Actual Cost has exceeded the Planned Value.", alias="SummaryAccountingVarianceByCost")
    summary_accounting_variance_by_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The Planned Value Labor Units minus the Actual Units. Negative value indicates that Actual Units have exceeded the Planned Value Labor Units.", alias="SummaryAccountingVarianceByLaborUnits")
    summary_activity_count: Optional[StrictInt] = Field(default=None, description="The number of activities that are currently in progress.", alias="SummaryActivityCount")
    summary_actual_duration: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The actual duration.", alias="SummaryActualDuration")
    summary_actual_expense_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The actual costs for all project expenses associated with the WBS.", alias="SummaryActualExpenseCost")
    summary_actual_finish_date: Optional[datetime] = Field(default=None, description="The latest actual finish date of all activities in the WBS.", alias="SummaryActualFinishDate")
    summary_actual_labor_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The actual cost for all labor resources assigned to the activity.", alias="SummaryActualLaborCost")
    summary_actual_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The actual labor units.", alias="SummaryActualLaborUnits")
    summary_actual_material_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The actual units for all material resources assigned to the activity.", alias="SummaryActualMaterialCost")
    summary_actual_non_labor_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The actual units for all nonlabor resources assigned to the activity.", alias="SummaryActualNonLaborCost")
    summary_actual_non_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The actual nonlabor units.", alias="SummaryActualNonLaborUnits")
    summary_actual_start_date: Optional[datetime] = Field(default=None, description="The earliest actual start date of all activities in the WBS.", alias="SummaryActualStartDate")
    summary_actual_this_period_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The actual this period cost (will be labor or nonlabor).", alias="SummaryActualThisPeriodCost")
    summary_actual_this_period_labor_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The actual this period labor cost.", alias="SummaryActualThisPeriodLaborCost")
    summary_actual_this_period_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The actual this period labor units.", alias="SummaryActualThisPeriodLaborUnits")
    summary_actual_this_period_material_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The actual this period material cost.", alias="SummaryActualThisPeriodMaterialCost")
    summary_actual_this_period_non_labor_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The actual this period nonlabor cost.", alias="SummaryActualThisPeriodNonLaborCost")
    summary_actual_this_period_non_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The actual this period nonlabor units.", alias="SummaryActualThisPeriodNonLaborUnits")
    summary_actual_total_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The actual labor cost + actual nonlabor cost + actual expense cost as of the project data date.", alias="SummaryActualTotalCost")
    summary_actual_value_by_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The actual total cost incurred on the activity as of the project data date, computed as Actual Labor Cost + Actual Nonlabor Cost + Actual Material Cost + Actual Expense Cost.", alias="SummaryActualValueByCost")
    summary_actual_value_by_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The actual total labor units for the activity as of the project data date (i.e., actual total cost by labor units).", alias="SummaryActualValueByLaborUnits")
    summary_at_completion_duration: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The total working time from the activity's current start date to the current finish date. The current start date is the planned start date until the activity is started, then it is the actual start date. The current finish date is the activity planned finish date while the activity is not started, the remaining finish date while the activity is in progress, and the actual finish date once the activity is completed. The total working time is computed using the activity's calendar.", alias="SummaryAtCompletionDuration")
    summary_at_completion_expense_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The sum of the actual plus remaining cost for all project expenses associated with the cost account. Computed as Actual Expense Cost + Remaining Expense Cost.", alias="SummaryAtCompletionExpenseCost")
    summary_at_completion_labor_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The sum of the actual plus remaining costs for all labor resources assigned to the activity. Computed as actual labor cost + remaining labor cost. Same as the planned labor costs if the activity is not started and the actual labor costs once the activity is completed.", alias="SummaryAtCompletionLaborCost")
    summary_at_completion_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The sum of the actual plus remaining units for all labor resources assigned to the activity. Computed as actual labor units + remaining labor units. Same as the planned labor units if the activity is not started and the actual labor units once the activity is completed.", alias="SummaryAtCompletionLaborUnits")
    summary_at_completion_material_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The material cost at completion. It is the sum of the actual plus remaining costs for all material resources assigned to the activity. Computed as actual material cost + remaining material cost. Same as the planned material costs if the activity is not started and the actual material costs once the activity is completed.", alias="SummaryAtCompletionMaterialCost")
    summary_at_completion_non_labor_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The nonlabor cost at completion. It is the sum of the actual plus remaining costs for all nonlabor resources assigned to the activity. Computed as actual nonlabor cost + remaining nonlabor cost. Same as the planned nonlabor costs if the activity is not started and the actual nonlabor costs once the activity is completed.", alias="SummaryAtCompletionNonLaborCost")
    summary_at_completion_non_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The nonlabor units at completion. It is the sum of the actual plus remaining units for all nonlabor resources assigned to the activity. Computed as actual nonlabor units + remaining nonlabor units. Same as the planned nonlabor units if the activity is not started and the actual nonlabor units once the activity is completed.", alias="SummaryAtCompletionNonLaborUnits")
    summary_at_completion_total_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The estimated cost at completion for the activity. Computed as the actual total cost plus the estimate-to-complete cost; EAC = ACWP + ETC. Note that the method for computing ETC depends on the earned-value technique selected for the activity's WBS.", alias="SummaryAtCompletionTotalCost")
    summary_at_completion_total_cost_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The Baseline Planned Total Cost - At Completion Total Cost.", alias="SummaryAtCompletionTotalCostVariance")
    summary_baseline_completed_activity_count: Optional[StrictInt] = Field(default=None, description="The number of completed activities in the baseline.", alias="SummaryBaselineCompletedActivityCount")
    summary_baseline_duration: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The planned duration for the activity in the primary baseline. Planned duration is the total working time from the activity current start date to the current finish date. Same as the actual duration plus the remaining duration. The total working time is computed using the activity's calendar.", alias="SummaryBaselineDuration")
    summary_baseline_expense_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The planned cost for all project expenses associated with the activity in the primary baseline. Computed as the baseline actual expense cost plus the baseline remaining expense cost.", alias="SummaryBaselineExpenseCost")
    summary_baseline_finish_date: Optional[datetime] = Field(default=None, description="The current latest finish date of all activities in the WBS for the current baseline.", alias="SummaryBaselineFinishDate")
    summary_baseline_in_progress_activity_count: Optional[StrictInt] = Field(default=None, description="The number of activities that should be currently in progress, according to the primary baseline. Computed using the baseline start and finish dates and the current data date.", alias="SummaryBaselineInProgressActivityCount")
    summary_baseline_labor_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The planned cost for all labor resources assigned to the activity in the primary baseline. Computed from the baseline At Completion labor units. If no resources are assigned, computed as the activity Baseline Planned Labor Units * Project Default Price / Time.", alias="SummaryBaselineLaborCost")
    summary_baseline_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The planned units for all labor resources assigned to the activity in the primary baseline. Computed as the baseline actual labor units plus the baseline remaining labor units.", alias="SummaryBaselineLaborUnits")
    summary_baseline_material_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The planned cost for all material resources assigned to the activity in the primary baseline. Computed from the baseline At Completion nonlabor units. If no resources are assigned.", alias="SummaryBaselineMaterialCost")
    summary_baseline_non_labor_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The planned cost for all nonlabor resources assigned to the activity in the primary baseline. Computed from the baseline At Completion nonlabor units. If no resources are assigned, computed as the activity Baseline Planned Nonlabor Units * Project Default Price / Time.", alias="SummaryBaselineNonLaborCost")
    summary_baseline_non_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The planned units for all nonlabor resources assigned to the activity in the primary baseline. Computed as the baseline actual nonlabor units plus the baseline remaining nonlabor units.", alias="SummaryBaselineNonLaborUnits")
    summary_baseline_not_started_activity_count: Optional[StrictInt] = Field(default=None, description="The number of activities not started in the baseline.", alias="SummaryBaselineNotStartedActivityCount")
    summary_baseline_start_date: Optional[datetime] = Field(default=None, description="The current earliest start date of all activities in the WBS for the current baseline.", alias="SummaryBaselineStartDate")
    summary_baseline_total_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The Planned Total Cost for the activity in the primary baseline, including labor resources, nonlabor resources, and project expenses. Baseline Planned Total Cost = Baseline Planned Labor Cost + Baseline Planned Nonlabor Cost + Baseline Planned Expense Cost.", alias="SummaryBaselineTotalCost")
    summary_budget_at_completion_by_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The Planned Total Cost through activity completion. Computed as Planned Labor Cost + Planned Nonlabor Cost + Planned Expense Cost, same as the Planned Total Cost.", alias="SummaryBudgetAtCompletionByCost")
    summary_budget_at_completion_by_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The Baseline Labor Units", alias="SummaryBudgetAtCompletionByLaborUnits")
    summary_completed_activity_count: Optional[StrictInt] = Field(default=None, description="The number of activities that have an Actual Finish in the WBS.", alias="SummaryCompletedActivityCount")
    summary_cost_percent_complete: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The percent complete of costs for the resource assignments in the wbs. Computed as Actual Units / At Complete Units * 100. Always in the range 0 to 100.", alias="SummaryCostPercentComplete")
    summary_cost_percent_of_planned: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The activity actual cost percent of planned. Computed as actual total cost / baseline total cost * 100, or equivalently as ACWP / BAC * 100. The value can exceed 100. The baseline total cost is the activity's at completion cost from the current baseline. This field is named SummaryCostPercentOfBudget in Primavera's Engineering & Construction and Maintenance & Turnaround solutions.", alias="SummaryCostPercentOfPlanned")
    summary_cost_performance_index_by_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The Earned Value divided by the Actual Cost. A value less than 1 indicates that the Actual Cost has exceeded the Planned Value.", alias="SummaryCostPerformanceIndexByCost")
    summary_cost_performance_index_by_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The Earned Value Labor Units / Actual Labor Units.", alias="SummaryCostPerformanceIndexByLaborUnits")
    summary_cost_variance_by_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The Earned Value minus the Actual Cost. A negative value indicates that the Actual Cost has exceeded the Planned Value.", alias="SummaryCostVarianceByCost")
    summary_cost_variance_by_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The Earned Value Labor Cost minus Actual Value Labor Cost.", alias="SummaryCostVarianceByLaborUnits")
    summary_cost_variance_index: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The value that is calcuated as the Cost Variance divided by Earned Value.", alias="SummaryCostVarianceIndex")
    summary_cost_variance_index_by_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The Cost Variance divided by Earned Value.", alias="SummaryCostVarianceIndexByCost")
    summary_cost_variance_index_by_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The Cost Variance Labor Units divided by Earned Value Labor Units.", alias="SummaryCostVarianceIndexByLaborUnits")
    summary_duration_percent_complete: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The activity actual duration percent of planned. Computed as (baseline planned duration - remaining duration) / baseline planned duration * 100", alias="SummaryDurationPercentComplete")
    summary_duration_percent_of_planned: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The summary actual duration percent of planned of all activities under this WBS. Computed as actual duration / baseline duration * 100. The value can exceed 100. The Baseline duration is the activity's at complete duration from the current baseline.", alias="SummaryDurationPercentOfPlanned")
    summary_duration_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The duration between the activity's baseline duration and the at complete duration. Computed as baseline duration - at completion duration.", alias="SummaryDurationVariance")
    summary_earned_value_by_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The Budget at Completion * Performance % Complete. The method for computing the Performance Percent Complete depends on the Earned Value technique selected for the activity's WBS. Budget at Completion is computed from the primary baseline.", alias="SummaryEarnedValueByCost")
    summary_earned_value_by_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The portion of the baseline labor units that is actually completed as of the project data date. Computed as Baseline Labor Units * Performance % Complete. The planned labor units performed is essentially the labor units Earned Value for the activity. The method for computing the Performance % Complete depends on the Earned Value technique selected for the activity's WBS. The Baseline Labor Units is taken from the current baseline.", alias="SummaryEarnedValueByLaborUnits")
    summary_estimate_at_completion_by_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The Actual Cost plus the Estimate to Complete Cost. The method for computing Estimate to Complete depends on the Earned Value technique selected for the activity's WBS.", alias="SummaryEstimateAtCompletionByCost")
    summary_estimate_at_completion_by_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The Actual Labor Units + Estimate To Complete Labor Units. (Estimate To Complete Labor Units is calculated based off of the Earned Value setting on the WBS.)", alias="SummaryEstimateAtCompletionByLaborUnits")
    summary_estimate_at_completion_high_percent_by_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The high forecast of Estimate At Completion (EAC) by labor units.", alias="SummaryEstimateAtCompletionHighPercentByLaborUnits")
    summary_estimate_at_completion_low_percent_by_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The low forecast of Estimate At Completion (EAC) by labor units.", alias="SummaryEstimateAtCompletionLowPercentByLaborUnits")
    summary_estimate_to_complete_by_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The Remaining Total Cost for the activity or the Performance Factor * (Budget at Completion - Earned Value), depending on the Earned Value technique selected for the activity's WBS (calculated from the primary baseline).", alias="SummaryEstimateToCompleteByCost")
    summary_estimate_to_complete_by_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The estimated quantity to complete the activity. Computed as either the remaining total units for the activity, or as Performance Factor * (Baseline Planned Labor Units - Planned Quantity of Work Performed), depending on the Earned Value Technique selected for the activity's WBS.", alias="SummaryEstimateToCompleteByLaborUnits")
    summary_expense_cost_percent_complete: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The percent complete of cost for all expenses associated with the WBS. It is computed as Actual Expense Cost / At Complete Expense Cost * 100, and it is always in the range of 0 to 100.", alias="SummaryExpenseCostPercentComplete")
    summary_expense_cost_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The Baseline Planned Expense Cost - At Completion Expense Cost (At Completion Expense Cost = Actual Expense Cost + Remaining Expense Cost).", alias="SummaryExpenseCostVariance")
    summary_finish_date_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The duration between the finish date in the current project and the baseline finish date. Calculated as finish date - baseline finish date.", alias="SummaryFinishDateVariance")
    summary_in_progress_activity_count: Optional[StrictInt] = Field(default=None, description="The number of activities that are currently in progress.", alias="SummaryInProgressActivityCount")
    summary_labor_cost_percent_complete: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The percent complete of cost for all labor resources assigned to the WBS. It is computed as Actual Labor Cost / At Complete Labor Cost * 100, and it is always in the range of 0 to 100.", alias="SummaryLaborCostPercentComplete")
    summary_labor_cost_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The Baseline Planned Labor Cost - At Completion Labor Cost.", alias="SummaryLaborCostVariance")
    summary_labor_units_percent_complete: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The percent complete of units for all labor resources for the WBS. Computed as actual labor units / at complete labor units * 100. Always in the range 0 to 100.", alias="SummaryLaborUnitsPercentComplete")
    summary_labor_units_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The difference between baseline labor units and at completion labor units. Calculated as baseline labor units - at completion labor units.", alias="SummaryLaborUnitsVariance")
    summary_material_cost_percent_complete: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The percent complete of cost for all material resources assigned to the WBS. It is computed as Actual Material Cost / At Complete Material Cost * 100, and it is always in the range of 0 to 100.", alias="SummaryMaterialCostPercentComplete")
    summary_material_cost_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The variance that is calculated as Baseline Material Cost - At Completion Material Cost.", alias="SummaryMaterialCostVariance")
    summary_non_labor_cost_percent_complete: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The percent complete of cost for all non-labor resources assigned to the WBS. It is computed as Actual Nonlabor Cost / At Complete Nonlabor Cost * 100, and it is always in the range of 0 to 100.", alias="SummaryNonLaborCostPercentComplete")
    summary_non_labor_cost_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The Baseline Planned Nonlabor Cost - At Completion Nonlabor Cost.", alias="SummaryNonLaborCostVariance")
    summary_non_labor_units_percent_complete: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The percent complete of units for all nonlabor resources for the WBS. Computed as Actual Nonlabor Cost / At Completion Nonlabor Cost * 100. Always in the range 0 to 100.", alias="SummaryNonLaborUnitsPercentComplete")
    summary_non_labor_units_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The difference between baseline nonlabor units and at completion non labor units. Calculated as baseline nonlabor units - at completion nonlabor units.", alias="SummaryNonLaborUnitsVariance")
    summary_not_started_activity_count: Optional[StrictInt] = Field(default=None, description="The number of activities that are currently not started.", alias="SummaryNotStartedActivityCount")
    summary_performance_percent_complete_by_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The percent complete of performance for all labor resources, nonlabor resources, and expenses. Computed as Earned Value / Budget At Completion * 100. Always in the range 0 to 100.", alias="SummaryPerformancePercentCompleteByCost")
    summary_performance_percent_complete_by_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The percent complete of performance for all labor resources. Computed as earned value labor units / baseline labor units * 100. Always in the range 0 to 100.", alias="SummaryPerformancePercentCompleteByLaborUnits")
    summary_planned_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The sum of all planned expense, non labor, labor, and material costs in the WBS.", alias="SummaryPlannedCost")
    summary_planned_duration: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The total working days between planned start and finish dates in the WBS.", alias="SummaryPlannedDuration")
    summary_planned_expense_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The sum of all planned expense costs in the WBS.", alias="SummaryPlannedExpenseCost")
    summary_planned_finish_date: Optional[datetime] = Field(default=None, description="The latest planned finish date of all activities in the WBS.", alias="SummaryPlannedFinishDate")
    summary_planned_labor_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The sum of all planned labor costs in the WBS.", alias="SummaryPlannedLaborCost")
    summary_planned_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The sum of all planned labor units in the WBS.", alias="SummaryPlannedLaborUnits")
    summary_planned_material_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The sum of all planned material costs in the WBS.", alias="SummaryPlannedMaterialCost")
    summary_planned_non_labor_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The sum of all planned non labor costs in the WBS.", alias="SummaryPlannedNonLaborCost")
    summary_planned_non_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The sum of all planned non labor units in the WBS.", alias="SummaryPlannedNonLaborUnits")
    summary_planned_start_date: Optional[datetime] = Field(default=None, description="The earliest planned start date of all activities in the WBS.", alias="SummaryPlannedStartDate")
    summary_planned_value_by_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The Budget at Completion * Schedule % Complete. The Schedule % Complete specifies how much of the activity's baseline duration has been completed so far. Budget at Completion is computed from the primary baseline", alias="SummaryPlannedValueByCost")
    summary_planned_value_by_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The portion of the baseline labor units that is scheduled to be completed as of the project data date. Computed as Baseline Labor Units * Schedule % Complete. The Schedule % Complete specifies how much of the activity's baseline duration has been completed so far. The Baseline Labor Units is taken from the current baseline.", alias="SummaryPlannedValueByLaborUnits")
    summary_progress_finish_date: Optional[datetime] = Field(default=None, description="The date the activity is expected to be finished according to the progress made on the activity's work products. The expected finish date is entered manually by people familiar with progress of the activity's work products.", alias="SummaryProgressFinishDate")
    summary_remaining_duration: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The total working time from the WBS remaining start date to the remaining finish date.", alias="SummaryRemainingDuration")
    summary_remaining_expense_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The remaining costs for all project expenses associated with the activities in the WBS.", alias="SummaryRemainingExpenseCost")
    summary_remaining_finish_date: Optional[datetime] = Field(default=None, description="The date the resource is scheduled to finish the remaining work for the activity. This date is computed by the project scheduler but can be updated manually by the project manager. Before the activity is started, the remaining finish date is the same as the planned finish date.", alias="SummaryRemainingFinishDate")
    summary_remaining_labor_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The remaining costs for all labor resources assigned to the activities. The remaining cost reflects the cost remaining for the WBS.", alias="SummaryRemainingLaborCost")
    summary_remaining_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The remaining units for all labor resources assigned to the activities. The remaining units reflects the work remaining to be done for the WBS.", alias="SummaryRemainingLaborUnits")
    summary_remaining_material_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The remaining material costs for all project expenses associated with the activities in the WBS.", alias="SummaryRemainingMaterialCost")
    summary_remaining_non_labor_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The remaining nonlabor costs for all project expenses associated with the activities in the WBS.", alias="SummaryRemainingNonLaborCost")
    summary_remaining_non_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The remaining units for all nonlabor resources assigned to the activities. The remaining units reflects the work remaining to be done for the WBS.", alias="SummaryRemainingNonLaborUnits")
    summary_remaining_start_date: Optional[datetime] = Field(default=None, description="The earliest remaining start of all activities assigned to the WBS.", alias="SummaryRemainingStartDate")
    summary_remaining_total_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The sum of all remaining total costs in the WBS.", alias="SummaryRemainingTotalCost")
    summary_schedule_percent_complete: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The measure that indicates how much of the WBS baseline duration has been completed so far. Computed based on where the current data date falls between the activity's baseline start and finish dates. If the data date is earlier than the baseline start, the schedule % complete is 0. If the data date is later than the baseline finish, the schedule % complete is 100. The schedule % complete indicates how much of the WBS duration should be currently completed, relative to the selected baseline.", alias="SummarySchedulePercentComplete")
    summary_schedule_percent_complete_by_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The percent complete of units for all labor resources. Computed as Actual Labor Units / At Completion Labor Units * 100. Always in the range 0 to 100.", alias="SummarySchedulePercentCompleteByLaborUnits")
    summary_schedule_performance_index_by_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The Earned Value divided by the Planned Value. A value less than 1 indicates that less work was actually performed than was scheduled.", alias="SummarySchedulePerformanceIndexByCost")
    summary_schedule_performance_index_by_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The Earned Value Labor Units divided by Planned Value Labor Units.", alias="SummarySchedulePerformanceIndexByLaborUnits")
    summary_schedule_variance_by_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The Earned Value divided by the Planned Value. A negative value indicates that less work was actually performed than was scheduled.", alias="SummaryScheduleVarianceByCost")
    summary_schedule_variance_by_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The Earned Value Labor Units minus the Planned Value Labor Units.", alias="SummaryScheduleVarianceByLaborUnits")
    summary_schedule_variance_index: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The value that is calculated as the Schedule Variance Labor Units divided by Planned Value Labor Units.", alias="SummaryScheduleVarianceIndex")
    summary_schedule_variance_index_by_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The Schedule Variance divided by the Planned Value.", alias="SummaryScheduleVarianceIndexByCost")
    summary_schedule_variance_index_by_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The Schedule Variance Labor Units divided by the Planned Value Labor Units.", alias="SummaryScheduleVarianceIndexByLaborUnits")
    summary_start_date_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The duration between the start date in the current project and the baseline start date. Calculated as start date - baseline start date.", alias="SummaryStartDateVariance")
    summary_to_complete_performance_index_by_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The (Budget at Completion - Earned Value) divided by (Estimate at Completion - Actual Cost).", alias="SummaryToCompletePerformanceIndexByCost")
    summary_total_cost_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The value that is calculated as baseline total cost - total cost.", alias="SummaryTotalCostVariance")
    summary_total_float: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The amount of time the WBS can be delayed before delaying the project finish date. Total float can be computed as late start - early start or as late finish - early finish; this option can be set when running the project scheduler.", alias="SummaryTotalFloat")
    summary_units_percent_complete: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The percent complete of units for the resource assignments in the wbs. Computed as Actual Units / At Complete Units * 100. Always in the range 0 to 100.", alias="SummaryUnitsPercentComplete")
    summary_variance_at_completion_by_labor_units: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The Baseline Planned Total Labor Units minus Estimate at Completion Labor Units.", alias="SummaryVarianceAtCompletionByLaborUnits")
    total_benefit_plan: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The sum of the monthly benefit plan.", alias="TotalBenefitPlan")
    total_benefit_plan_tally: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The sum of the monthly benefit plan tally.", alias="TotalBenefitPlanTally")
    total_spending_plan: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The sum of the monthly spending plan.", alias="TotalSpendingPlan")
    total_spending_plan_tally: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The sum of the monthly spending plan tally.", alias="TotalSpendingPlanTally")
    unallocated_budget: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The difference between the total current and distributed current budget. Calculated as total current budget - distributed current budget.", alias="UnallocatedBudget")
    undistributed_current_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The total spending plan minus the total spending plan tally.", alias="UndistributedCurrentVariance")
    wbs_category_object_id: Optional[StrictInt] = Field(default=None, description="The unique ID of the associated WBS category value. Note that the label used for the WBS category is dynamic; it is controlled by the system administrator.", alias="WBSCategoryObjectId")
    wbs_milestone_percent_complete: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The WBSMilestonePercentComplete field determines whether to calculate earned value by defining milestones at the WBS level and assigning a level of significance or weight to each of them. As progress occurs and you mark each milestone complete, the WBS element's performance percent complete is calculated based on the weight of the milestone.", alias="WBSMilestonePercentComplete")
    __properties: ClassVar[List[str]] = ["AnticipatedFinishDate", "AnticipatedStartDate", "Code", "ContainsSummaryData", "CreateDate", "CreateUser", "CurrentBudget", "CurrentVariance", "DistributedCurrentBudget", "EarnedValueComputeType", "EarnedValueETCComputeType", "EarnedValueETCUserValue", "EarnedValueUserPercent", "EstimatedWeight", "FinishDate", "ForecastFinishDate", "ForecastStartDate", "GUID", "IndependentETCLaborUnits", "IndependentETCTotalCost", "IntegratedType", "IntegratedWBS", "IsBaseline", "IsTemplate", "IsWorkPackage", "LastUpdateDate", "LastUpdateUser", "Name", "OBSName", "OBSObjectId", "ObjectId", "OriginalBudget", "ParentObjectId", "ProjectId", "ProjectObjectId", "ProposedBudget", "RolledUpFinishDate", "RolledUpStartDate", "SequenceNumber", "StartDate", "Status", "StatusReviewerName", "StatusReviewerObjectId", "SummaryAccountingVarianceByCost", "SummaryAccountingVarianceByLaborUnits", "SummaryActivityCount", "SummaryActualDuration", "SummaryActualExpenseCost", "SummaryActualFinishDate", "SummaryActualLaborCost", "SummaryActualLaborUnits", "SummaryActualMaterialCost", "SummaryActualNonLaborCost", "SummaryActualNonLaborUnits", "SummaryActualStartDate", "SummaryActualThisPeriodCost", "SummaryActualThisPeriodLaborCost", "SummaryActualThisPeriodLaborUnits", "SummaryActualThisPeriodMaterialCost", "SummaryActualThisPeriodNonLaborCost", "SummaryActualThisPeriodNonLaborUnits", "SummaryActualTotalCost", "SummaryActualValueByCost", "SummaryActualValueByLaborUnits", "SummaryAtCompletionDuration", "SummaryAtCompletionExpenseCost", "SummaryAtCompletionLaborCost", "SummaryAtCompletionLaborUnits", "SummaryAtCompletionMaterialCost", "SummaryAtCompletionNonLaborCost", "SummaryAtCompletionNonLaborUnits", "SummaryAtCompletionTotalCost", "SummaryAtCompletionTotalCostVariance", "SummaryBaselineCompletedActivityCount", "SummaryBaselineDuration", "SummaryBaselineExpenseCost", "SummaryBaselineFinishDate", "SummaryBaselineInProgressActivityCount", "SummaryBaselineLaborCost", "SummaryBaselineLaborUnits", "SummaryBaselineMaterialCost", "SummaryBaselineNonLaborCost", "SummaryBaselineNonLaborUnits", "SummaryBaselineNotStartedActivityCount", "SummaryBaselineStartDate", "SummaryBaselineTotalCost", "SummaryBudgetAtCompletionByCost", "SummaryBudgetAtCompletionByLaborUnits", "SummaryCompletedActivityCount", "SummaryCostPercentComplete", "SummaryCostPercentOfPlanned", "SummaryCostPerformanceIndexByCost", "SummaryCostPerformanceIndexByLaborUnits", "SummaryCostVarianceByCost", "SummaryCostVarianceByLaborUnits", "SummaryCostVarianceIndex", "SummaryCostVarianceIndexByCost", "SummaryCostVarianceIndexByLaborUnits", "SummaryDurationPercentComplete", "SummaryDurationPercentOfPlanned", "SummaryDurationVariance", "SummaryEarnedValueByCost", "SummaryEarnedValueByLaborUnits", "SummaryEstimateAtCompletionByCost", "SummaryEstimateAtCompletionByLaborUnits", "SummaryEstimateAtCompletionHighPercentByLaborUnits", "SummaryEstimateAtCompletionLowPercentByLaborUnits", "SummaryEstimateToCompleteByCost", "SummaryEstimateToCompleteByLaborUnits", "SummaryExpenseCostPercentComplete", "SummaryExpenseCostVariance", "SummaryFinishDateVariance", "SummaryInProgressActivityCount", "SummaryLaborCostPercentComplete", "SummaryLaborCostVariance", "SummaryLaborUnitsPercentComplete", "SummaryLaborUnitsVariance", "SummaryMaterialCostPercentComplete", "SummaryMaterialCostVariance", "SummaryNonLaborCostPercentComplete", "SummaryNonLaborCostVariance", "SummaryNonLaborUnitsPercentComplete", "SummaryNonLaborUnitsVariance", "SummaryNotStartedActivityCount", "SummaryPerformancePercentCompleteByCost", "SummaryPerformancePercentCompleteByLaborUnits", "SummaryPlannedCost", "SummaryPlannedDuration", "SummaryPlannedExpenseCost", "SummaryPlannedFinishDate", "SummaryPlannedLaborCost", "SummaryPlannedLaborUnits", "SummaryPlannedMaterialCost", "SummaryPlannedNonLaborCost", "SummaryPlannedNonLaborUnits", "SummaryPlannedStartDate", "SummaryPlannedValueByCost", "SummaryPlannedValueByLaborUnits", "SummaryProgressFinishDate", "SummaryRemainingDuration", "SummaryRemainingExpenseCost", "SummaryRemainingFinishDate", "SummaryRemainingLaborCost", "SummaryRemainingLaborUnits", "SummaryRemainingMaterialCost", "SummaryRemainingNonLaborCost", "SummaryRemainingNonLaborUnits", "SummaryRemainingStartDate", "SummaryRemainingTotalCost", "SummarySchedulePercentComplete", "SummarySchedulePercentCompleteByLaborUnits", "SummarySchedulePerformanceIndexByCost", "SummarySchedulePerformanceIndexByLaborUnits", "SummaryScheduleVarianceByCost", "SummaryScheduleVarianceByLaborUnits", "SummaryScheduleVarianceIndex", "SummaryScheduleVarianceIndexByCost", "SummaryScheduleVarianceIndexByLaborUnits", "SummaryStartDateVariance", "SummaryToCompletePerformanceIndexByCost", "SummaryTotalCostVariance", "SummaryTotalFloat", "SummaryUnitsPercentComplete", "SummaryVarianceAtCompletionByLaborUnits", "TotalBenefitPlan", "TotalBenefitPlanTally", "TotalSpendingPlan", "TotalSpendingPlanTally", "UnallocatedBudget", "UndistributedCurrentVariance", "WBSCategoryObjectId", "WBSMilestonePercentComplete"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of WBS from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of WBS from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "AnticipatedFinishDate": obj.get("AnticipatedFinishDate"),
            "AnticipatedStartDate": obj.get("AnticipatedStartDate"),
            "Code": obj.get("Code"),
            "ContainsSummaryData": obj.get("ContainsSummaryData"),
            "CreateDate": obj.get("CreateDate"),
            "CreateUser": obj.get("CreateUser"),
            "CurrentBudget": obj.get("CurrentBudget"),
            "CurrentVariance": obj.get("CurrentVariance"),
            "DistributedCurrentBudget": obj.get("DistributedCurrentBudget"),
            "EarnedValueComputeType": obj.get("EarnedValueComputeType"),
            "EarnedValueETCComputeType": obj.get("EarnedValueETCComputeType"),
            "EarnedValueETCUserValue": obj.get("EarnedValueETCUserValue"),
            "EarnedValueUserPercent": obj.get("EarnedValueUserPercent"),
            "EstimatedWeight": obj.get("EstimatedWeight"),
            "FinishDate": obj.get("FinishDate"),
            "ForecastFinishDate": obj.get("ForecastFinishDate"),
            "ForecastStartDate": obj.get("ForecastStartDate"),
            "GUID": obj.get("GUID"),
            "IndependentETCLaborUnits": obj.get("IndependentETCLaborUnits"),
            "IndependentETCTotalCost": obj.get("IndependentETCTotalCost"),
            "IntegratedType": obj.get("IntegratedType"),
            "IntegratedWBS": obj.get("IntegratedWBS"),
            "IsBaseline": obj.get("IsBaseline"),
            "IsTemplate": obj.get("IsTemplate"),
            "IsWorkPackage": obj.get("IsWorkPackage"),
            "LastUpdateDate": obj.get("LastUpdateDate"),
            "LastUpdateUser": obj.get("LastUpdateUser"),
            "Name": obj.get("Name"),
            "OBSName": obj.get("OBSName"),
            "OBSObjectId": obj.get("OBSObjectId"),
            "ObjectId": obj.get("ObjectId"),
            "OriginalBudget": obj.get("OriginalBudget"),
            "ParentObjectId": obj.get("ParentObjectId"),
            "ProjectId": obj.get("ProjectId"),
            "ProjectObjectId": obj.get("ProjectObjectId"),
            "ProposedBudget": obj.get("ProposedBudget"),
            "RolledUpFinishDate": obj.get("RolledUpFinishDate"),
            "RolledUpStartDate": obj.get("RolledUpStartDate"),
            "SequenceNumber": obj.get("SequenceNumber"),
            "StartDate": obj.get("StartDate"),
            "Status": obj.get("Status"),
            "StatusReviewerName": obj.get("StatusReviewerName"),
            "StatusReviewerObjectId": obj.get("StatusReviewerObjectId"),
            "SummaryAccountingVarianceByCost": obj.get("SummaryAccountingVarianceByCost"),
            "SummaryAccountingVarianceByLaborUnits": obj.get("SummaryAccountingVarianceByLaborUnits"),
            "SummaryActivityCount": obj.get("SummaryActivityCount"),
            "SummaryActualDuration": obj.get("SummaryActualDuration"),
            "SummaryActualExpenseCost": obj.get("SummaryActualExpenseCost"),
            "SummaryActualFinishDate": obj.get("SummaryActualFinishDate"),
            "SummaryActualLaborCost": obj.get("SummaryActualLaborCost"),
            "SummaryActualLaborUnits": obj.get("SummaryActualLaborUnits"),
            "SummaryActualMaterialCost": obj.get("SummaryActualMaterialCost"),
            "SummaryActualNonLaborCost": obj.get("SummaryActualNonLaborCost"),
            "SummaryActualNonLaborUnits": obj.get("SummaryActualNonLaborUnits"),
            "SummaryActualStartDate": obj.get("SummaryActualStartDate"),
            "SummaryActualThisPeriodCost": obj.get("SummaryActualThisPeriodCost"),
            "SummaryActualThisPeriodLaborCost": obj.get("SummaryActualThisPeriodLaborCost"),
            "SummaryActualThisPeriodLaborUnits": obj.get("SummaryActualThisPeriodLaborUnits"),
            "SummaryActualThisPeriodMaterialCost": obj.get("SummaryActualThisPeriodMaterialCost"),
            "SummaryActualThisPeriodNonLaborCost": obj.get("SummaryActualThisPeriodNonLaborCost"),
            "SummaryActualThisPeriodNonLaborUnits": obj.get("SummaryActualThisPeriodNonLaborUnits"),
            "SummaryActualTotalCost": obj.get("SummaryActualTotalCost"),
            "SummaryActualValueByCost": obj.get("SummaryActualValueByCost"),
            "SummaryActualValueByLaborUnits": obj.get("SummaryActualValueByLaborUnits"),
            "SummaryAtCompletionDuration": obj.get("SummaryAtCompletionDuration"),
            "SummaryAtCompletionExpenseCost": obj.get("SummaryAtCompletionExpenseCost"),
            "SummaryAtCompletionLaborCost": obj.get("SummaryAtCompletionLaborCost"),
            "SummaryAtCompletionLaborUnits": obj.get("SummaryAtCompletionLaborUnits"),
            "SummaryAtCompletionMaterialCost": obj.get("SummaryAtCompletionMaterialCost"),
            "SummaryAtCompletionNonLaborCost": obj.get("SummaryAtCompletionNonLaborCost"),
            "SummaryAtCompletionNonLaborUnits": obj.get("SummaryAtCompletionNonLaborUnits"),
            "SummaryAtCompletionTotalCost": obj.get("SummaryAtCompletionTotalCost"),
            "SummaryAtCompletionTotalCostVariance": obj.get("SummaryAtCompletionTotalCostVariance"),
            "SummaryBaselineCompletedActivityCount": obj.get("SummaryBaselineCompletedActivityCount"),
            "SummaryBaselineDuration": obj.get("SummaryBaselineDuration"),
            "SummaryBaselineExpenseCost": obj.get("SummaryBaselineExpenseCost"),
            "SummaryBaselineFinishDate": obj.get("SummaryBaselineFinishDate"),
            "SummaryBaselineInProgressActivityCount": obj.get("SummaryBaselineInProgressActivityCount"),
            "SummaryBaselineLaborCost": obj.get("SummaryBaselineLaborCost"),
            "SummaryBaselineLaborUnits": obj.get("SummaryBaselineLaborUnits"),
            "SummaryBaselineMaterialCost": obj.get("SummaryBaselineMaterialCost"),
            "SummaryBaselineNonLaborCost": obj.get("SummaryBaselineNonLaborCost"),
            "SummaryBaselineNonLaborUnits": obj.get("SummaryBaselineNonLaborUnits"),
            "SummaryBaselineNotStartedActivityCount": obj.get("SummaryBaselineNotStartedActivityCount"),
            "SummaryBaselineStartDate": obj.get("SummaryBaselineStartDate"),
            "SummaryBaselineTotalCost": obj.get("SummaryBaselineTotalCost"),
            "SummaryBudgetAtCompletionByCost": obj.get("SummaryBudgetAtCompletionByCost"),
            "SummaryBudgetAtCompletionByLaborUnits": obj.get("SummaryBudgetAtCompletionByLaborUnits"),
            "SummaryCompletedActivityCount": obj.get("SummaryCompletedActivityCount"),
            "SummaryCostPercentComplete": obj.get("SummaryCostPercentComplete"),
            "SummaryCostPercentOfPlanned": obj.get("SummaryCostPercentOfPlanned"),
            "SummaryCostPerformanceIndexByCost": obj.get("SummaryCostPerformanceIndexByCost"),
            "SummaryCostPerformanceIndexByLaborUnits": obj.get("SummaryCostPerformanceIndexByLaborUnits"),
            "SummaryCostVarianceByCost": obj.get("SummaryCostVarianceByCost"),
            "SummaryCostVarianceByLaborUnits": obj.get("SummaryCostVarianceByLaborUnits"),
            "SummaryCostVarianceIndex": obj.get("SummaryCostVarianceIndex"),
            "SummaryCostVarianceIndexByCost": obj.get("SummaryCostVarianceIndexByCost"),
            "SummaryCostVarianceIndexByLaborUnits": obj.get("SummaryCostVarianceIndexByLaborUnits"),
            "SummaryDurationPercentComplete": obj.get("SummaryDurationPercentComplete"),
            "SummaryDurationPercentOfPlanned": obj.get("SummaryDurationPercentOfPlanned"),
            "SummaryDurationVariance": obj.get("SummaryDurationVariance"),
            "SummaryEarnedValueByCost": obj.get("SummaryEarnedValueByCost"),
            "SummaryEarnedValueByLaborUnits": obj.get("SummaryEarnedValueByLaborUnits"),
            "SummaryEstimateAtCompletionByCost": obj.get("SummaryEstimateAtCompletionByCost"),
            "SummaryEstimateAtCompletionByLaborUnits": obj.get("SummaryEstimateAtCompletionByLaborUnits"),
            "SummaryEstimateAtCompletionHighPercentByLaborUnits": obj.get("SummaryEstimateAtCompletionHighPercentByLaborUnits"),
            "SummaryEstimateAtCompletionLowPercentByLaborUnits": obj.get("SummaryEstimateAtCompletionLowPercentByLaborUnits"),
            "SummaryEstimateToCompleteByCost": obj.get("SummaryEstimateToCompleteByCost"),
            "SummaryEstimateToCompleteByLaborUnits": obj.get("SummaryEstimateToCompleteByLaborUnits"),
            "SummaryExpenseCostPercentComplete": obj.get("SummaryExpenseCostPercentComplete"),
            "SummaryExpenseCostVariance": obj.get("SummaryExpenseCostVariance"),
            "SummaryFinishDateVariance": obj.get("SummaryFinishDateVariance"),
            "SummaryInProgressActivityCount": obj.get("SummaryInProgressActivityCount"),
            "SummaryLaborCostPercentComplete": obj.get("SummaryLaborCostPercentComplete"),
            "SummaryLaborCostVariance": obj.get("SummaryLaborCostVariance"),
            "SummaryLaborUnitsPercentComplete": obj.get("SummaryLaborUnitsPercentComplete"),
            "SummaryLaborUnitsVariance": obj.get("SummaryLaborUnitsVariance"),
            "SummaryMaterialCostPercentComplete": obj.get("SummaryMaterialCostPercentComplete"),
            "SummaryMaterialCostVariance": obj.get("SummaryMaterialCostVariance"),
            "SummaryNonLaborCostPercentComplete": obj.get("SummaryNonLaborCostPercentComplete"),
            "SummaryNonLaborCostVariance": obj.get("SummaryNonLaborCostVariance"),
            "SummaryNonLaborUnitsPercentComplete": obj.get("SummaryNonLaborUnitsPercentComplete"),
            "SummaryNonLaborUnitsVariance": obj.get("SummaryNonLaborUnitsVariance"),
            "SummaryNotStartedActivityCount": obj.get("SummaryNotStartedActivityCount"),
            "SummaryPerformancePercentCompleteByCost": obj.get("SummaryPerformancePercentCompleteByCost"),
            "SummaryPerformancePercentCompleteByLaborUnits": obj.get("SummaryPerformancePercentCompleteByLaborUnits"),
            "SummaryPlannedCost": obj.get("SummaryPlannedCost"),
            "SummaryPlannedDuration": obj.get("SummaryPlannedDuration"),
            "SummaryPlannedExpenseCost": obj.get("SummaryPlannedExpenseCost"),
            "SummaryPlannedFinishDate": obj.get("SummaryPlannedFinishDate"),
            "SummaryPlannedLaborCost": obj.get("SummaryPlannedLaborCost"),
            "SummaryPlannedLaborUnits": obj.get("SummaryPlannedLaborUnits"),
            "SummaryPlannedMaterialCost": obj.get("SummaryPlannedMaterialCost"),
            "SummaryPlannedNonLaborCost": obj.get("SummaryPlannedNonLaborCost"),
            "SummaryPlannedNonLaborUnits": obj.get("SummaryPlannedNonLaborUnits"),
            "SummaryPlannedStartDate": obj.get("SummaryPlannedStartDate"),
            "SummaryPlannedValueByCost": obj.get("SummaryPlannedValueByCost"),
            "SummaryPlannedValueByLaborUnits": obj.get("SummaryPlannedValueByLaborUnits"),
            "SummaryProgressFinishDate": obj.get("SummaryProgressFinishDate"),
            "SummaryRemainingDuration": obj.get("SummaryRemainingDuration"),
            "SummaryRemainingExpenseCost": obj.get("SummaryRemainingExpenseCost"),
            "SummaryRemainingFinishDate": obj.get("SummaryRemainingFinishDate"),
            "SummaryRemainingLaborCost": obj.get("SummaryRemainingLaborCost"),
            "SummaryRemainingLaborUnits": obj.get("SummaryRemainingLaborUnits"),
            "SummaryRemainingMaterialCost": obj.get("SummaryRemainingMaterialCost"),
            "SummaryRemainingNonLaborCost": obj.get("SummaryRemainingNonLaborCost"),
            "SummaryRemainingNonLaborUnits": obj.get("SummaryRemainingNonLaborUnits"),
            "SummaryRemainingStartDate": obj.get("SummaryRemainingStartDate"),
            "SummaryRemainingTotalCost": obj.get("SummaryRemainingTotalCost"),
            "SummarySchedulePercentComplete": obj.get("SummarySchedulePercentComplete"),
            "SummarySchedulePercentCompleteByLaborUnits": obj.get("SummarySchedulePercentCompleteByLaborUnits"),
            "SummarySchedulePerformanceIndexByCost": obj.get("SummarySchedulePerformanceIndexByCost"),
            "SummarySchedulePerformanceIndexByLaborUnits": obj.get("SummarySchedulePerformanceIndexByLaborUnits"),
            "SummaryScheduleVarianceByCost": obj.get("SummaryScheduleVarianceByCost"),
            "SummaryScheduleVarianceByLaborUnits": obj.get("SummaryScheduleVarianceByLaborUnits"),
            "SummaryScheduleVarianceIndex": obj.get("SummaryScheduleVarianceIndex"),
            "SummaryScheduleVarianceIndexByCost": obj.get("SummaryScheduleVarianceIndexByCost"),
            "SummaryScheduleVarianceIndexByLaborUnits": obj.get("SummaryScheduleVarianceIndexByLaborUnits"),
            "SummaryStartDateVariance": obj.get("SummaryStartDateVariance"),
            "SummaryToCompletePerformanceIndexByCost": obj.get("SummaryToCompletePerformanceIndexByCost"),
            "SummaryTotalCostVariance": obj.get("SummaryTotalCostVariance"),
            "SummaryTotalFloat": obj.get("SummaryTotalFloat"),
            "SummaryUnitsPercentComplete": obj.get("SummaryUnitsPercentComplete"),
            "SummaryVarianceAtCompletionByLaborUnits": obj.get("SummaryVarianceAtCompletionByLaborUnits"),
            "TotalBenefitPlan": obj.get("TotalBenefitPlan"),
            "TotalBenefitPlanTally": obj.get("TotalBenefitPlanTally"),
            "TotalSpendingPlan": obj.get("TotalSpendingPlan"),
            "TotalSpendingPlanTally": obj.get("TotalSpendingPlanTally"),
            "UnallocatedBudget": obj.get("UnallocatedBudget"),
            "UndistributedCurrentVariance": obj.get("UndistributedCurrentVariance"),
            "WBSCategoryObjectId": obj.get("WBSCategoryObjectId"),
            "WBSMilestonePercentComplete": obj.get("WBSMilestonePercentComplete")
        })
        return _obj


