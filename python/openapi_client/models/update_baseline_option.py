# coding: utf-8

"""
    P6 EPPM Rest API

    The Primavera P6 Enterprise Project Portfolio Management (P6 EPPM) API is a flexible interface to P6 EPPM functionality based on the Representational State Transfer (REST) architectural style. Clients can use HTTP enabled technologies to interact with the API and access application features. For example, you can write programs in Javascript, Java, and other languages to create users, view a list of users, update a user's status, or update user details.

    The version of the OpenAPI document: 2022.12.12
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field, StrictBool, StrictInt, StrictStr
from typing import Any, ClassVar, Dict, List, Optional
from typing import Optional, Set
from typing_extensions import Self

class UpdateBaselineOption(BaseModel):
    """
    UpdateBaselineOption Entity
    """ # noqa: E501
    activities_filter: Optional[StrictStr] = Field(default=None, description="The option used to update activity IDs of the selected filter when updating the baseline.", alias="ActivitiesFilter")
    activities_filter_logic: Optional[StrictStr] = Field(default=None, description="The option used to update activity filter logic when updating the baseline.", alias="ActivitiesFilterLogic")
    activity_code_assignments: Optional[StrictBool] = Field(default=None, description="The option used to update activity code assignments when updating the baseline.", alias="ActivityCodeAssignments")
    activity_filter_id: Optional[StrictStr] = Field(default=None, description="The option used to update activity filter id when updating the baseline.", alias="ActivityFilterId")
    activity_filter_name: Optional[StrictStr] = Field(default=None, description="The option used to update activity filter name when updating the baseline.", alias="ActivityFilterName")
    activity_information: Optional[StrictBool] = Field(default=None, description="The option used to update activity information for existing resource and role assignments when updating the baseline.", alias="ActivityInformation")
    activity_notebooks: Optional[StrictBool] = Field(default=None, description="The option used to update activity information for existing resource and role assignments when updating the baseline.", alias="ActivityNotebooks")
    activity_rsrc_assignment_codes: Optional[StrictBool] = Field(default=None, alias="ActivityRsrcAssignmentCodes")
    activity_rsrc_assignment_udfs: Optional[StrictBool] = Field(default=None, description="The option used to update activity resource assignment UDFs when updating the baseline.", alias="ActivityRsrcAssignmentUdfs")
    activity_udfs: Optional[StrictBool] = Field(default=None, description="The option used to update activity UDFs when updating the baseline", alias="ActivityUdfs")
    actual_units_cost_wo_rsrc_assignmnt: Optional[StrictBool] = Field(default=None, description="The option used to update activity actual units and cost without resource assignments when updating the baseline.", alias="ActualUnitsCostWoRsrcAssignmnt")
    add_new_activities_data: Optional[StrictBool] = Field(default=None, description="The option used to add new activities with data when updating the baseline.", alias="AddNewActivitiesData")
    add_new_rsrc_role: Optional[StrictBool] = Field(default=None, description="The option used to add new resource and role assignments when updating the baseline.", alias="AddNewRsrcRole")
    all_activities: Optional[StrictBool] = Field(default=None, description="The option used to include all activities when updating the baseline.", alias="AllActivities")
    batch_mode_enabled: Optional[StrictBool] = Field(default=None, description="The option used to enable the batch update mode when updating the baseline.", alias="BatchModeEnabled")
    budget_units_cost: Optional[StrictBool] = Field(default=None, description="The option used to update budget units and cost for existing resource and role assignments when updating the baseline.", alias="BudgetUnitsCost")
    budget_units_cost_wo_rsrc_assignmnt: Optional[StrictBool] = Field(default=None, description="The option used to update activity budget units and cost without resource assignment when updating the baseline.", alias="BudgetUnitsCostWoRsrcAssignmnt")
    constraints: Optional[StrictBool] = Field(default=None, description="The option used to update activity constraints when updating the baseline", alias="Constraints")
    dates_duration_datadates: Optional[StrictBool] = Field(default=None, description="The option used to update activity dates, duration, and data dates when updating the baseline", alias="DatesDurationDatadates")
    delete_non_existing_activities: Optional[StrictBool] = Field(default=None, description="The option used to delete non existing activities when updating the baseline.", alias="DeleteNonExistingActivities")
    expense_udfs: Optional[StrictBool] = Field(default=None, description="the option used to update activity expense UDFs when updating the baseline.", alias="ExpenseUdfs")
    expenses: Optional[StrictBool] = Field(default=None, description="The option used to update activity expenses when updating the baseline.", alias="Expenses")
    filtered_activities: Optional[StrictBool] = Field(default=None, description="The option used to include activities in the selected folder when updating the baseline.", alias="FilteredActivities")
    general_activiti_info: Optional[StrictBool] = Field(default=None, description="The option used to update general activity info when updating the baseline.", alias="GeneralActivitiInfo")
    ignore_last_update_date: Optional[StrictBool] = Field(default=None, description="The option used to ignore LastUpdateDate when updating the baseline.", alias="IgnoreLastUpdateDate")
    issue_udfs: Optional[StrictBool] = Field(default=None, description="The option used to update the Issue UDFs when updating the baseline.", alias="IssueUDFs")
    new_activity_information: Optional[StrictBool] = Field(default=None, alias="NewActivityInformation")
    new_budget_units_cost: Optional[StrictBool] = Field(default=None, alias="NewBudgetUnitsCost")
    object_id: StrictInt = Field(description="The unique ID of the associated user.", alias="ObjectId")
    project_details: Optional[StrictBool] = Field(default=None, description="The option used to update the project details when updating the baseline.", alias="ProjectDetails")
    project_risks_issues_and_thresholds: Optional[StrictBool] = Field(default=None, description="The option used to update the Project Risks Issues and Thresholds when updating the baseline.", alias="ProjectRisksIssuesAndThresholds")
    project_udfs: Optional[StrictBool] = Field(default=None, description="The option used to update the project UDFs when updating the baseline.", alias="ProjectUDFs")
    relationships: Optional[StrictBool] = Field(default=None, description="The option used to update activity relationships when updating the baseline.", alias="Relationships")
    risk_assignments: Optional[StrictBool] = Field(default=None, description="The option used to update risk assignments when updating the baseline.", alias="RiskAssignments")
    risk_udfs: Optional[StrictBool] = Field(default=None, description="The option used to update the Risks UDFs when updating the baseline.", alias="RiskUDFs")
    steps: Optional[StrictBool] = Field(default=None, description="The option used to update activity steps when updating the baseline.", alias="Steps")
    steps_udf: Optional[StrictBool] = Field(default=None, description="The option used to update activity steps UDFs when updating the baseline.", alias="StepsUdf")
    update_exist_rsrc_role_assignment: Optional[StrictBool] = Field(default=None, description="The option used to update existing resource and role assignments when updating the baseline.", alias="UpdateExistRsrcRoleAssignment")
    update_existing_activities: Optional[StrictBool] = Field(default=None, description="The option used to update existing activities when updating the baseline.", alias="UpdateExistingActivities")
    user_name: Optional[StrictStr] = Field(default=None, description="The user's login name.", alias="UserName")
    wp_document_udfs: Optional[StrictBool] = Field(default=None, description="The option used to update the WPDocument UDFs when updating the baseline.", alias="WPDocumentUDFs")
    wbs_assignments: Optional[StrictBool] = Field(default=None, description="The option used to update WBS assignments when updating the baseline.", alias="WbsAssignments")
    wbs_udfs: Optional[StrictBool] = Field(default=None, description="The option used to update the WBS UDFs when updating the baseline.", alias="WbsUDFs")
    work_products_and_documents: Optional[StrictBool] = Field(default=None, description="The option used to update the work products and documents when updating the baseline.", alias="WorkProductsAndDocuments")
    __properties: ClassVar[List[str]] = ["ActivitiesFilter", "ActivitiesFilterLogic", "ActivityCodeAssignments", "ActivityFilterId", "ActivityFilterName", "ActivityInformation", "ActivityNotebooks", "ActivityRsrcAssignmentCodes", "ActivityRsrcAssignmentUdfs", "ActivityUdfs", "ActualUnitsCostWoRsrcAssignmnt", "AddNewActivitiesData", "AddNewRsrcRole", "AllActivities", "BatchModeEnabled", "BudgetUnitsCost", "BudgetUnitsCostWoRsrcAssignmnt", "Constraints", "DatesDurationDatadates", "DeleteNonExistingActivities", "ExpenseUdfs", "Expenses", "FilteredActivities", "GeneralActivitiInfo", "IgnoreLastUpdateDate", "IssueUDFs", "NewActivityInformation", "NewBudgetUnitsCost", "ObjectId", "ProjectDetails", "ProjectRisksIssuesAndThresholds", "ProjectUDFs", "Relationships", "RiskAssignments", "RiskUDFs", "Steps", "StepsUdf", "UpdateExistRsrcRoleAssignment", "UpdateExistingActivities", "UserName", "WPDocumentUDFs", "WbsAssignments", "WbsUDFs", "WorkProductsAndDocuments"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of UpdateBaselineOption from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of UpdateBaselineOption from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "ActivitiesFilter": obj.get("ActivitiesFilter"),
            "ActivitiesFilterLogic": obj.get("ActivitiesFilterLogic"),
            "ActivityCodeAssignments": obj.get("ActivityCodeAssignments"),
            "ActivityFilterId": obj.get("ActivityFilterId"),
            "ActivityFilterName": obj.get("ActivityFilterName"),
            "ActivityInformation": obj.get("ActivityInformation"),
            "ActivityNotebooks": obj.get("ActivityNotebooks"),
            "ActivityRsrcAssignmentCodes": obj.get("ActivityRsrcAssignmentCodes"),
            "ActivityRsrcAssignmentUdfs": obj.get("ActivityRsrcAssignmentUdfs"),
            "ActivityUdfs": obj.get("ActivityUdfs"),
            "ActualUnitsCostWoRsrcAssignmnt": obj.get("ActualUnitsCostWoRsrcAssignmnt"),
            "AddNewActivitiesData": obj.get("AddNewActivitiesData"),
            "AddNewRsrcRole": obj.get("AddNewRsrcRole"),
            "AllActivities": obj.get("AllActivities"),
            "BatchModeEnabled": obj.get("BatchModeEnabled"),
            "BudgetUnitsCost": obj.get("BudgetUnitsCost"),
            "BudgetUnitsCostWoRsrcAssignmnt": obj.get("BudgetUnitsCostWoRsrcAssignmnt"),
            "Constraints": obj.get("Constraints"),
            "DatesDurationDatadates": obj.get("DatesDurationDatadates"),
            "DeleteNonExistingActivities": obj.get("DeleteNonExistingActivities"),
            "ExpenseUdfs": obj.get("ExpenseUdfs"),
            "Expenses": obj.get("Expenses"),
            "FilteredActivities": obj.get("FilteredActivities"),
            "GeneralActivitiInfo": obj.get("GeneralActivitiInfo"),
            "IgnoreLastUpdateDate": obj.get("IgnoreLastUpdateDate"),
            "IssueUDFs": obj.get("IssueUDFs"),
            "NewActivityInformation": obj.get("NewActivityInformation"),
            "NewBudgetUnitsCost": obj.get("NewBudgetUnitsCost"),
            "ObjectId": obj.get("ObjectId"),
            "ProjectDetails": obj.get("ProjectDetails"),
            "ProjectRisksIssuesAndThresholds": obj.get("ProjectRisksIssuesAndThresholds"),
            "ProjectUDFs": obj.get("ProjectUDFs"),
            "Relationships": obj.get("Relationships"),
            "RiskAssignments": obj.get("RiskAssignments"),
            "RiskUDFs": obj.get("RiskUDFs"),
            "Steps": obj.get("Steps"),
            "StepsUdf": obj.get("StepsUdf"),
            "UpdateExistRsrcRoleAssignment": obj.get("UpdateExistRsrcRoleAssignment"),
            "UpdateExistingActivities": obj.get("UpdateExistingActivities"),
            "UserName": obj.get("UserName"),
            "WPDocumentUDFs": obj.get("WPDocumentUDFs"),
            "WbsAssignments": obj.get("WbsAssignments"),
            "WbsUDFs": obj.get("WbsUDFs"),
            "WorkProductsAndDocuments": obj.get("WorkProductsAndDocuments")
        })
        return _obj


