# coding: utf-8

"""
    P6 EPPM Rest API

    The Primavera P6 Enterprise Project Portfolio Management (P6 EPPM) API is a flexible interface to P6 EPPM functionality based on the Representational State Transfer (REST) architectural style. Clients can use HTTP enabled technologies to interact with the API and access application features. For example, you can write programs in Javascript, Java, and other languages to create users, view a list of users, update a user's status, or update user details.

    The version of the OpenAPI document: 2022.12.12
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.baseline_project import BaselineProject

class TestBaselineProject(unittest.TestCase):
    """BaselineProject unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BaselineProject:
        """Test BaselineProject
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BaselineProject`
        """
        model = BaselineProject()
        if include_optional:
            return BaselineProject(
                activity_default_activity_type = '',
                activity_default_calendar_object_id = 56,
                activity_default_cost_account_object_id = 56,
                activity_default_duration_type = '',
                activity_default_percent_complete_type = '',
                activity_default_price_per_unit = 1.337,
                activity_default_review_required = True,
                activity_id_based_on_selected_activity = True,
                activity_id_increment = 56,
                activity_id_prefix = '',
                activity_id_suffix = 56,
                activity_percent_complete_based_on_activity_steps = True,
                add_actual_to_remaining = True,
                added_by = '',
                allow_status_review = True,
                annual_discount_rate = 1.337,
                anticipated_finish_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                anticipated_start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                assignment_default_driving_flag = True,
                assignment_default_rate_type = '',
                baseline_type_name = '',
                baseline_type_object_id = 56,
                check_out_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                check_out_status = True,
                check_out_user_object_id = 56,
                contains_summary_data = True,
                cost_quantity_recalculate_flag = True,
                create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                create_user = '',
                critical_activity_float_limit = 1.337,
                critical_activity_path_type = '',
                current_budget = 1.337,
                current_variance = 1.337,
                data_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                date_added = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                default_price_time_units = '',
                description = '',
                discount_application_period = '',
                distributed_current_budget = 1.337,
                enable_publication = True,
                enable_summarization = True,
                financial_period_tmpl_id = 56,
                finish_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                fiscal_year_start_month = 56,
                forecast_finish_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                forecast_start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                guid = '',
                has_future_bucket_data = True,
                history_interval = '',
                history_level = '',
                id = '',
                independent_etc_labor_units = 1.337,
                independent_etc_total_cost = 1.337,
                last_baseline_update_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_financial_period_object_id = 56,
                last_level_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_published_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_schedule_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_summarized_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_update_baseline_options = '',
                last_update_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_update_user = '',
                leveling_priority = 56,
                link_actual_to_actual_this_period = True,
                link_percent_complete_with_actual = True,
                link_planned_and_at_completion_flag = True,
                location_name = '',
                location_object_id = 56,
                must_finish_by_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                name = '',
                obs_name = '',
                obs_object_id = 56,
                object_id = 56,
                original_budget = 1.337,
                original_project_object_id = 56,
                owner_resource_object_id = 56,
                parent_epsid = '',
                parent_eps_name = '',
                parent_eps_object_id = 56,
                planned_start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                primary_resources_can_mark_activities_as_completed = True,
                project_forecast_start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                project_schedule_type = '',
                proposed_budget = 1.337,
                publication_priority = 56,
                reset_planned_to_remaining_flag = True,
                resource_can_be_assigned_to_same_activity_more_than_once = True,
                resource_name = '',
                resources_can_assign_themselves_to_activities = True,
                resources_can_assign_themselves_to_activities_outside_obs_access = True,
                resources_can_edit_assignment_percent_complete = True,
                risk_exposure = 1.337,
                risk_level = '',
                risk_matrix_object_id = 56,
                risk_score = 56,
                scheduled_finish_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                status = '',
                status_reviewer_name = '',
                status_reviewer_object_id = '',
                strategic_priority = 56,
                summarize_to_wbs_level = 56,
                summarized_data_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                summary_accounting_variance_by_cost = 1.337,
                summary_accounting_variance_by_labor_units = 1.337,
                summary_activity_count = 56,
                summary_actual_duration = 1.337,
                summary_actual_expense_cost = 1.337,
                summary_actual_finish_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                summary_actual_labor_cost = 1.337,
                summary_actual_labor_units = 1.337,
                summary_actual_material_cost = 1.337,
                summary_actual_non_labor_cost = 1.337,
                summary_actual_non_labor_units = 1.337,
                summary_actual_start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                summary_actual_this_period_cost = 1.337,
                summary_actual_this_period_labor_cost = 1.337,
                summary_actual_this_period_labor_units = 1.337,
                summary_actual_this_period_material_cost = 1.337,
                summary_actual_this_period_non_labor_cost = 1.337,
                summary_actual_this_period_non_labor_units = 1.337,
                summary_actual_total_cost = 1.337,
                summary_actual_value_by_cost = 1.337,
                summary_actual_value_by_labor_units = 1.337,
                summary_at_completion_duration = 1.337,
                summary_at_completion_expense_cost = 1.337,
                summary_at_completion_labor_cost = 1.337,
                summary_at_completion_labor_units = 1.337,
                summary_at_completion_material_cost = 1.337,
                summary_at_completion_non_labor_cost = 1.337,
                summary_at_completion_non_labor_units = 1.337,
                summary_at_completion_total_cost = 1.337,
                summary_at_completion_total_cost_variance = 1.337,
                summary_baseline_completed_activity_count = 56,
                summary_baseline_duration = 1.337,
                summary_baseline_expense_cost = 1.337,
                summary_baseline_finish_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                summary_baseline_in_progress_activity_count = 56,
                summary_baseline_labor_cost = 1.337,
                summary_baseline_labor_units = 1.337,
                summary_baseline_material_cost = 1.337,
                summary_baseline_non_labor_cost = 1.337,
                summary_baseline_non_labor_units = 1.337,
                summary_baseline_not_started_activity_count = 56,
                summary_baseline_start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                summary_baseline_total_cost = 1.337,
                summary_budget_at_completion_by_cost = 1.337,
                summary_budget_at_completion_by_labor_units = 1.337,
                summary_completed_activity_count = 56,
                summary_cost_percent_complete = 1.337,
                summary_cost_percent_of_planned = 1.337,
                summary_cost_performance_index_by_cost = 1.337,
                summary_cost_performance_index_by_labor_units = 1.337,
                summary_cost_variance_by_cost = 1.337,
                summary_cost_variance_by_labor_units = 1.337,
                summary_cost_variance_index = 1.337,
                summary_cost_variance_index_by_cost = 1.337,
                summary_cost_variance_index_by_labor_units = 1.337,
                summary_duration_percent_complete = 1.337,
                summary_duration_percent_of_planned = 1.337,
                summary_duration_variance = 1.337,
                summary_earned_value_by_cost = 1.337,
                summary_earned_value_by_labor_units = 1.337,
                summary_estimate_at_completion_by_cost = 1.337,
                summary_estimate_at_completion_by_labor_units = 1.337,
                summary_estimate_at_completion_high_percent_by_labor_units = 1.337,
                summary_estimate_at_completion_low_percent_by_labor_units = 1.337,
                summary_estimate_to_complete_by_cost = 1.337,
                summary_estimate_to_complete_by_labor_units = 1.337,
                summary_expense_cost_percent_complete = 1.337,
                summary_expense_cost_variance = 1.337,
                summary_finish_date_variance = 1.337,
                summary_in_progress_activity_count = 56,
                summary_labor_cost_percent_complete = 1.337,
                summary_labor_cost_variance = 1.337,
                summary_labor_units_percent_complete = 1.337,
                summary_labor_units_variance = 1.337,
                summary_material_cost_percent_complete = 1.337,
                summary_material_cost_variance = 1.337,
                summary_non_labor_cost_percent_complete = 1.337,
                summary_non_labor_cost_variance = 1.337,
                summary_non_labor_units_percent_complete = 1.337,
                summary_non_labor_units_variance = 1.337,
                summary_not_started_activity_count = 56,
                summary_performance_percent_complete_by_labor_units = 1.337,
                summary_planned_cost = 1.337,
                summary_planned_duration = 1.337,
                summary_planned_expense_cost = 1.337,
                summary_planned_finish_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                summary_planned_labor_cost = 1.337,
                summary_planned_labor_units = 1.337,
                summary_planned_material_cost = 1.337,
                summary_planned_non_labor_cost = 1.337,
                summary_planned_non_labor_units = 1.337,
                summary_planned_start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                summary_planned_value_by_cost = 1.337,
                summary_planned_value_by_labor_units = 1.337,
                summary_progress_finish_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                summary_remaining_duration = 1.337,
                summary_remaining_expense_cost = 1.337,
                summary_remaining_finish_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                summary_remaining_labor_cost = 1.337,
                summary_remaining_labor_units = 1.337,
                summary_remaining_material_cost = 1.337,
                summary_remaining_non_labor_cost = 1.337,
                summary_remaining_non_labor_units = 1.337,
                summary_remaining_start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                summary_remaining_total_cost = 1.337,
                summary_schedule_percent_complete = 1.337,
                summary_schedule_percent_complete_by_labor_units = 1.337,
                summary_schedule_performance_index_by_cost = 1.337,
                summary_schedule_performance_index_by_labor_units = 1.337,
                summary_schedule_variance_by_cost = 1.337,
                summary_schedule_variance_by_labor_units = 1.337,
                summary_schedule_variance_index = 1.337,
                summary_schedule_variance_index_by_cost = 1.337,
                summary_schedule_variance_index_by_labor_units = 1.337,
                summary_start_date_variance = 1.337,
                summary_to_complete_performance_index_by_cost = 1.337,
                summary_total_cost_variance = 1.337,
                summary_total_float = 1.337,
                summary_units_percent_complete = 1.337,
                summary_variance_at_completion_by_labor_units = 1.337,
                team_member_activity_fields = '',
                team_member_assignment_option = '',
                team_member_resource_assignment_fields = '',
                team_member_step_udf_viewable_fields = '',
                team_member_viewable_fields = '',
                total_benefit_plan = 1.337,
                total_benefit_plan_tally = 1.337,
                total_spending_plan = 1.337,
                total_spending_plan_tally = 1.337,
                unallocated_budget = 1.337,
                undistributed_current_variance = 1.337,
                wbs_code_separator = '',
                wbs_object_id = 56,
                web_site_root_directory = '',
                web_site_url = ''
            )
        else:
            return BaselineProject(
                id = '',
                name = '',
                parent_eps_object_id = 56,
        )
        """

    def testBaselineProject(self):
        """Test BaselineProject"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
